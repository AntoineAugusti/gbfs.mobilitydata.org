{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"General Bikeshare Feed Specification (GBFS) \u00b6 What is GBFS? \u00b6 GBFS (General Bikeshare Feed Specification) is an open data standard for shared mobility. GBFS makes real-time information available to travellers to help them discover and use shared mobility services. Reference Major Change Proposals Resources Blog FAQ See the GBFS Specification GBFS Guides \u00b6 Not sure how to approach GBFS? Our team at MobilityData is hard at work bringing you how-to guides and explainers for all things GBFS. Click the articles below to read more! Additional guides and translations are available on the Tools & Services Page. GBFS and Shared Mobility Policy (Americas): The guide describes how GBFS can advance cities\u2019 efforts to support sustainable transportation and how developing more comprehensive GBFS policies can benefit everyone. Also available in Espa\u00f1ol and Portugu\u00eas . GBFS and Shared Mobility Policy (Europe): The guide describes how GBFS can advance cities\u2019 efforts to support sustainable transportation and how developing more comprehensive GBFS policies can benefit everyone. Also available in Fran\u00e7ais , Espa\u00f1ol , and Portugu\u00eas . GBFS News \u00b6 Read the latest about GBFS on the MobilityData blog page! Click the headline below to read more. Articles in French and Spanish can be found on our blog directly or on the Tools & Services page. GBFS v2.3-RC is here to fix (some) of your problems : But even though we love v2.2, GBFS was ready for a few improvements. Let us introduce you to v2.3-RC! Cities, GBFS v2.2 is here for you : What you\u2019re missing out on if you\u2019re still stuck with v1.0 data. The price is right! \ud83d\udcb8 : Previously in GBFS, pricing wasn\u2019t described in much detail. To put it simply, operators could only share a sentence that included the pricing information. Go to MobilityData's Blog","title":"Home"},{"location":"#general-bikeshare-feed-specification-gbfs","text":"","title":"General Bikeshare Feed Specification (GBFS)"},{"location":"#what-is-gbfs","text":"GBFS (General Bikeshare Feed Specification) is an open data standard for shared mobility. GBFS makes real-time information available to travellers to help them discover and use shared mobility services. Reference Major Change Proposals Resources Blog FAQ See the GBFS Specification","title":"What is GBFS?"},{"location":"#gbfs-guides","text":"Not sure how to approach GBFS? Our team at MobilityData is hard at work bringing you how-to guides and explainers for all things GBFS. Click the articles below to read more! Additional guides and translations are available on the Tools & Services Page. GBFS and Shared Mobility Policy (Americas): The guide describes how GBFS can advance cities\u2019 efforts to support sustainable transportation and how developing more comprehensive GBFS policies can benefit everyone. Also available in Espa\u00f1ol and Portugu\u00eas . GBFS and Shared Mobility Policy (Europe): The guide describes how GBFS can advance cities\u2019 efforts to support sustainable transportation and how developing more comprehensive GBFS policies can benefit everyone. Also available in Fran\u00e7ais , Espa\u00f1ol , and Portugu\u00eas .","title":"GBFS Guides"},{"location":"#gbfs-news","text":"Read the latest about GBFS on the MobilityData blog page! Click the headline below to read more. Articles in French and Spanish can be found on our blog directly or on the Tools & Services page. GBFS v2.3-RC is here to fix (some) of your problems : But even though we love v2.2, GBFS was ready for a few improvements. Let us introduce you to v2.3-RC! Cities, GBFS v2.2 is here for you : What you\u2019re missing out on if you\u2019re still stuck with v1.0 data. The price is right! \ud83d\udcb8 : Previously in GBFS, pricing wasn\u2019t described in much detail. To put it simply, operators could only share a sentence that included the pricing information. Go to MobilityData's Blog","title":"GBFS News"},{"location":"about/","text":"About \u00b6 GBFS \u00b6 GBFS was created in 2014 by Mitch Vars with collaboration from public, private sector and non-profit shared mobility system owners and operators, application developers, and technology vendors. Michael Frumin, Jesse Chan-Norris and others made significant contributions of time and expertise toward the development of v1.0 on behalf of Motivate International LLC (now Lyft). The North American Bikeshare Association\u2019s endorsement, support, and hosting was key to its success starting in 2015. Prior to the creation of GBFS, bike sharing systems each used different proprietary data formats, making it difficult for application developers to create tools for travellers. In 2019, scooters, electric bikes, and dockless shared mobility services were operating on the streets, and GBFS improvement was stalled. Through a competitive process, in June 2019, NABSA chose MobilityData to clarify, improve, and govern GBFS. To this day, GBFS continues to be improved and modified based upon the needs of the larger shared mobility community. In 2020, MobilityData and NABSA became industry partners to continue the development, improvement and wide scale adoption of GBFS. Read the press release here . NABSA \u00b6 The North American Bikeshare Association (NABSA) connects the biggest minds in bikeshare and shared micromobility to support, promote and enhance shared alternatives to traditional transportation across North America. NABSA is the industry\u2019s membership organization with representation from system owners, operators, host cities, equipment manufacturers and technology providers. NABSA continues to play a significant role in GBFS by convening stakeholders, producing educational content, and promoting GBFS - including developing best practices for municipalities. More information about NABSA can be found at nabsa.net MobilityData \u00b6 MobilityData began in 2015 as a project of the Rocky Mountain Institute and became an independent Canadian non-profit organization in 2019. MobilityData is a membership based international non-profit designed to manage and expand mobility data specifications through open and transparent governance. MobilityData leverages standard data specifications to improve the traveller experience and reduce travellers\u2019 dependency on the single occupancy vehicle. To do this, MobilityData convenes industry stakeholders such as transportation agencies, software vendors, mobility applications, mobility operators, and governmental entities to standardize and expand data formats. MobilityData presently manages the General Transit Feed Specification (GTFS) and the General Bikeshare Feed Specification (GBFS). On the first Wednesday of the month, MobilityData hosts a GBFS Advisory Meeting for MobilityData members. On the third Wednesday of the month, MobilityData hosts a Technical Presentation on one aspect of GBFS for MobilityData members. More information about MobilityData can be found on our website: mobilitydata.org General Contact \u00b6 Community & Partnerships: partnerships@mobilitydata.org Shared Mobility Team: sharedmobility@mobilitydata.org","title":"About"},{"location":"about/#about","text":"","title":"About"},{"location":"about/#gbfs","text":"GBFS was created in 2014 by Mitch Vars with collaboration from public, private sector and non-profit shared mobility system owners and operators, application developers, and technology vendors. Michael Frumin, Jesse Chan-Norris and others made significant contributions of time and expertise toward the development of v1.0 on behalf of Motivate International LLC (now Lyft). The North American Bikeshare Association\u2019s endorsement, support, and hosting was key to its success starting in 2015. Prior to the creation of GBFS, bike sharing systems each used different proprietary data formats, making it difficult for application developers to create tools for travellers. In 2019, scooters, electric bikes, and dockless shared mobility services were operating on the streets, and GBFS improvement was stalled. Through a competitive process, in June 2019, NABSA chose MobilityData to clarify, improve, and govern GBFS. To this day, GBFS continues to be improved and modified based upon the needs of the larger shared mobility community. In 2020, MobilityData and NABSA became industry partners to continue the development, improvement and wide scale adoption of GBFS. Read the press release here .","title":"GBFS"},{"location":"about/#nabsa","text":"The North American Bikeshare Association (NABSA) connects the biggest minds in bikeshare and shared micromobility to support, promote and enhance shared alternatives to traditional transportation across North America. NABSA is the industry\u2019s membership organization with representation from system owners, operators, host cities, equipment manufacturers and technology providers. NABSA continues to play a significant role in GBFS by convening stakeholders, producing educational content, and promoting GBFS - including developing best practices for municipalities. More information about NABSA can be found at nabsa.net","title":"NABSA"},{"location":"about/#mobilitydata","text":"MobilityData began in 2015 as a project of the Rocky Mountain Institute and became an independent Canadian non-profit organization in 2019. MobilityData is a membership based international non-profit designed to manage and expand mobility data specifications through open and transparent governance. MobilityData leverages standard data specifications to improve the traveller experience and reduce travellers\u2019 dependency on the single occupancy vehicle. To do this, MobilityData convenes industry stakeholders such as transportation agencies, software vendors, mobility applications, mobility operators, and governmental entities to standardize and expand data formats. MobilityData presently manages the General Transit Feed Specification (GTFS) and the General Bikeshare Feed Specification (GBFS). On the first Wednesday of the month, MobilityData hosts a GBFS Advisory Meeting for MobilityData members. On the third Wednesday of the month, MobilityData hosts a Technical Presentation on one aspect of GBFS for MobilityData members. More information about MobilityData can be found on our website: mobilitydata.org","title":"MobilityData"},{"location":"about/#general-contact","text":"Community & Partnerships: partnerships@mobilitydata.org Shared Mobility Team: sharedmobility@mobilitydata.org","title":"General Contact"},{"location":"faq/","text":"What is GBFS? \u00b6 The General BIkeshare Feed Specification, or GBFS, is an open data standard for shared mobility information, developed through a consensus-based process on GitHub. GBFS enables the exchange of information in a way that ensures all parties agree on what the information represents. You can think of it like a dictionary, where each term has a definition and a set of rules for how it can be used. GBFS is a real-time data specification. It describes the current status of a mobility system at this point in time. GBFS does not support, and is not intended for historical data such as trip or maintenance records. Open Data Standards \u00b6 What is an open data standard? An open data standard is a documented set of requirements that describe how people and organizations can produce and distribute data on a particular subject. Open data standards are typically developed \u201cin the open\u201d meaning the public has a way to contribute. What open data standards is GBFS built on? Click on any of the below standards to learn more: JSON GeoJSON POSIX IETF BCP 47 WGS84 IANA Time Zones What is JSON? JSON stands for Javascript Object Notation. It is a lightweight text format for storing and transporting data, that is easy to understand and read. More information about JSON can be found at https://www.w3schools.com/js/js_json_intro.asp . What is GeoJSON? GeoJSON is an open data standard for denoting geographical features (lines and polygons) and their attributes in JSON format. More information on GeoJSON can be found at https://geojson.org/ . Uses of GBFS \u00b6 Why was GBFS created? GBFS was created to make real-time shared mobility information available in a standardized format to support the development of traveler facing applications. GBFS specifies how shared mobility data should be structured for proper interoperability of systems. Before the creation of GBFS, bike sharing systems each used different proprietary data formats, making it difficult for application developers to create tools for travellers. Why is it important for GBFS data to be openly available? Public GBFS feeds help facilitate the discovery of mobility services, increasing access to shared mobility. They also provide transparency around businesses that are permitted to operate in the public right of way. This transparency can increase public trust of shared mobility operators and their services. Do private GBFS feeds exist? GBFS is a specification for public data, however some GBFS producers have elected to publish private feeds that require authentication using an API key or login. Great care has been taken in the development of GBFS to ensure that data contained in the specification does not adversely affect user privacy. Requiring authentication of GBFS data greatly diminishes it\u2019s value as a source of public information. What is GBFS-Private? GBFS-Private is a new project undertaken by MobilityData to develop guidance on publishing certain types of information that may be too sensitive in nature to include in public GBFS feeds. The goal of the project is to preserve public data while continuing to protect user privacy. How is GBFS different from MDS? GBFS is a real-time public data specification for consumer-facing applications, whereas MDS is not public data and is intended for use only by regulators. GBFS provides real-time data to support the discovery and use of mobility systems by travelers. MDS contains both real-time and historical data that is used by cities to monitor and regulate shared mobility operators. All MDS Provider feeds are required to also publish a public GBFS feed. What are the benefits of using GBFS? For providers, GBFS means an end to a patch-work of regulation that requires different data in different formats for each city in which they operate. Standardization provides assurance to providers that data requests can be clearly defined and are fully implementable. As a consensus-based, open source standard, providers have an equal voice along with cities in the ongoing development of the GBFS specification. Comprehensive documentation and resources are available to cities and providers alike to aid in implementation. For consumers, data standardization allows application developers to aggregate data from multiple providers across multiple markets. GBFS can eliminate the need for bespoke solutions for each mobility system. For cities, requiring GBFS data as part of a shared mobility program can help to increase access to shared mobility services. Standardization of mobility data through GBFS has resulted in a growing marketplace of data management software and services. These products and services are used to assist cities in working with GBFS data to effectively manage and regulate mobility services. Does GBFS contain personal data? GBFS does not contain personal data. Given the real-time nature of the data, as well as other safety measures such as rotating bike_id, a user\u2019s information will never be shared and a user or individual trips will not be able to be traced. Does GBFS contain operational data? GBFS does not contain operational data. GBFS only contains real-time data that is beneficial to the customer for their trips. systems.csv \u00b6 What is systems.csv? systems.csv is a list of all the known systems that publish public GBFS feeds. Why is systems.csv important? systems.csv is the primary index of GBFS data sources, it allows developers to build software on top of it, provides a source for research projects, and demonstrates the reach of the specification worldwide. Who updates systems.csv? systems.csv is currently maintained by MobilityData and community members. If you have or are aware of a system that does not appear on the list please add it by opening a pull request. Are all of the systems in systems.csv compliant with the specification? No - there is no compliance or validation requirement for inclusion in systems.csv. To be considered fully compliant with GBFS, systems MUST have an entry in the systems.csv file. Shared Mobility \u00b6 What is shared mobility? Shared mobility encompasses both micromobility, such as bikeshare and scooters, as well as other larger types of mobility, such as carsharing. What is shared micromobility? Shared micromobility typically refers to small, lightweight mobility devices with speeds below 25km/h that are hired by the end user. Examples include bikes, ebikes, scooters, etc. Why is GBFS named GBFS if it covers modes other than bikes? While GBFS has its roots in bikeshare, it has been expanded as the shared mobility industry has evolved to encompass all forms of shared mobility vehicles. Governance and Change Process \u00b6 How is the specification updated? GBFS is an open source project developed under a consensus-based governance model. Contributors come from across the shared mobility industry, public sector, civic technology and elsewhere. Proposals for changes or additions to the specification are made through Pull Requests. Once the community has had adequate time to comment and iterate on a proposal, the proposal is put to a vote. If the proposal passes, it becomes part of a release candidate. When the release candidate has been successfully implemented in a public data set, it becomes an official release. The complete governance and change process can be found here . How can I propose a change to the specification? If you are interested in proposing a modification, you can do so at the GBFS GitHub repo. If you do not have the solution to the problem and would like to start a discussion, we recommend you open an issue . If you have a solution and would like to propose a change, please open a Pull Request . GitHub \u00b6 What is GitHub? GitHub is a website and service that allows people to work collaboratively on software and other projects. GitHub provides discussion forums and supports version control, which is an important part of managing and storing versions of a software project. What is a repository? A repository, often called a \u201crepo\u201d, is a place where all of a project's documents and versions are stored. What is a GitHub issue? An issue on GitHub is a place for discussion. Anyone can open an issue to spark conversation about the specification, be it a direction you would like to see the spec take, or a problem you are experiencing in using the specification. What is a GitHub pull request? A pull request is a request to change the specification. Anyone can open a pull request and open the floor to comments and discussion. Pull requests are then voted on to see whether or not they should be merged into the specification. Working with GBFS \u00b6 Best Practices \u00b6 What are GBFS Best Practices? GBFS Best Practices are recommendations we provide that are not required under the specification, but that make your data amazing! They are identified in the documentation using the keywords \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", and \"NOT RECOMMENDED\" and are to be interpreted as described in RFC2119 , BCP 14 and RFC8174 when, and only when, they appear in all capitals, as shown here. Why are GBFS Best Practices important? GBFS Best Practices are important so that the end user has access to the most reliable and complete information without compromising their privacy. Do GBFS validator tools check for conformance with Best Practices? Validator tools do not check for conformance with Best Practices, since they are not explicit in the specification. It is recommended to use a manual approach to ensure conformance with Best Practices. What should I do if I notice a GBFS data feed does not conform to Best Practices? If you notice a data feed does not conform to Best Practices, you can try to contact the publisher using their feed contact email found in system_information.json . How can I to propose a modification/addition to Best Practices? If you would like to propose a modification to Best Practices, please do so by either opening an Issue or Pull Request via GitHub. What does is mean to rotate bike_id and why is it important? The bike_id field is a unique identifier for each vehicle in a system. Rotating bike_id means that a vehicle\u2019s ID will change to a random string each time a rental ends. Use of persistent vehicle IDs poses a threat to user privacy. This is especially important for dockless mobility systems, where a user may end or begin their trip in front of their home or other frequently visited locations. Validation \u00b6 What does it mean to validate a GBFS feed? Using a validator ensures that your data conforms to the requirements set out by the specification. In a nutshell, a validator ensures you have a valid GBFS feed. Does MobilityData have a GBFS validator? Currently, MobilityData does not have a GBFS validator, however we have plans to build a canonical validator in 2021. In the meantime, there are a handful of community-built validators and other tools available; check out our Tools page for the list. Glossary \u00b6 API - An API (Application Program Interface) communicates with two applications. A common analogy for explaining an API is to think of a restaurant; you are one \u201csystem\u201d, and the kitchen is another. An intermediary is needed to communicate what you want the kitchen to do for you. That intermediary, in this case the server, is the equivalent of an API. API endpoint - An API endpoint is the specific digital location where requests for information are sent by one program and where the resource lives. Consumer - A consumer is someone who is using GBFS data. Examples of GBFS consumers are trip planning applications, researchers and regulators. Deeplink - A deeplink is a link that takes you to specific content rather than a general homepage. In the context of GBFS, a deeplink would take you to the rental page for that specific vehicle or station, rather than the system\u2019s homepage. Geofencing - A geofence is a virtual boundary that defines a geographic area. When a shared mobility vehicle enters or exits a geofenced area, events can be triggered, for example a push notification can be sent to a user\u2019s phone. Geofencing may be used to delineate pick up and drop off zones, no-ride zones, speed limit zones, equity zones, etc. Provider - A producer is the entity that is publishing GBFS, most often the system operator. Station - A station is a location where shared mobility vehicles are made available for rent. Stations may include physical infrastructure like rental kiosks, docks or racks, or they may be virtual, delineated by pavement markings. System - A system is the entirety of the shared mobility service from a single provider. Systems can be made up of docking stations, vehicles, and other infrastructure, and are typically limited to the local geography in which they operate. Vehicle - A system\u2019s fleet is made up of individual vehicles. Some systems may have multiple vehicle types, whereas others may only have one. Examples of shared mobility vehicles are bikes, ebikes, scooters, and mopeds. MobilityData \u00b6 How do I get involved? There are a number of ways you can get involved with our organization and the Shared Mobility community! Join our slack: bit.ly/mobilitydata-slack Join us on Github: github.com/NABSA/gbfs Become a member: bit.ly/Membership-form-2021 What does it mean to be a MobilityData member? MobilityData has two membership types: Core Member : Core Members are voting members, who have the opportunity to join any working group, an invitation to send up to two representatives to any of our workshops with no fee, early access to new tools and services (exclusive access for the first three months), a stronger influence on our roadmap, and recognition on MobilityData\u2019s website as a Core Member. Regular Member : Regular Members are non-voting members who receive updates on MobilityData\u2019s projects, an invitation for one representative to attend one MobilityData workshop each year, occasional invitations to selected working groups and discussions, and recognition on MobilityData\u2019s website as a Regular Member. For more information check out MobilityData's website . How do I become a MobilityData member? To become a MobilityData member, please fill out this form . If you have questions about membership, please contact gretchen@mobilitydata.org","title":"FAQ"},{"location":"faq/#what-is-gbfs","text":"The General BIkeshare Feed Specification, or GBFS, is an open data standard for shared mobility information, developed through a consensus-based process on GitHub. GBFS enables the exchange of information in a way that ensures all parties agree on what the information represents. You can think of it like a dictionary, where each term has a definition and a set of rules for how it can be used. GBFS is a real-time data specification. It describes the current status of a mobility system at this point in time. GBFS does not support, and is not intended for historical data such as trip or maintenance records.","title":"What is GBFS?"},{"location":"faq/#open-data-standards","text":"What is an open data standard? An open data standard is a documented set of requirements that describe how people and organizations can produce and distribute data on a particular subject. Open data standards are typically developed \u201cin the open\u201d meaning the public has a way to contribute. What open data standards is GBFS built on? Click on any of the below standards to learn more: JSON GeoJSON POSIX IETF BCP 47 WGS84 IANA Time Zones What is JSON? JSON stands for Javascript Object Notation. It is a lightweight text format for storing and transporting data, that is easy to understand and read. More information about JSON can be found at https://www.w3schools.com/js/js_json_intro.asp . What is GeoJSON? GeoJSON is an open data standard for denoting geographical features (lines and polygons) and their attributes in JSON format. More information on GeoJSON can be found at https://geojson.org/ .","title":"Open Data Standards"},{"location":"faq/#uses-of-gbfs","text":"Why was GBFS created? GBFS was created to make real-time shared mobility information available in a standardized format to support the development of traveler facing applications. GBFS specifies how shared mobility data should be structured for proper interoperability of systems. Before the creation of GBFS, bike sharing systems each used different proprietary data formats, making it difficult for application developers to create tools for travellers. Why is it important for GBFS data to be openly available? Public GBFS feeds help facilitate the discovery of mobility services, increasing access to shared mobility. They also provide transparency around businesses that are permitted to operate in the public right of way. This transparency can increase public trust of shared mobility operators and their services. Do private GBFS feeds exist? GBFS is a specification for public data, however some GBFS producers have elected to publish private feeds that require authentication using an API key or login. Great care has been taken in the development of GBFS to ensure that data contained in the specification does not adversely affect user privacy. Requiring authentication of GBFS data greatly diminishes it\u2019s value as a source of public information. What is GBFS-Private? GBFS-Private is a new project undertaken by MobilityData to develop guidance on publishing certain types of information that may be too sensitive in nature to include in public GBFS feeds. The goal of the project is to preserve public data while continuing to protect user privacy. How is GBFS different from MDS? GBFS is a real-time public data specification for consumer-facing applications, whereas MDS is not public data and is intended for use only by regulators. GBFS provides real-time data to support the discovery and use of mobility systems by travelers. MDS contains both real-time and historical data that is used by cities to monitor and regulate shared mobility operators. All MDS Provider feeds are required to also publish a public GBFS feed. What are the benefits of using GBFS? For providers, GBFS means an end to a patch-work of regulation that requires different data in different formats for each city in which they operate. Standardization provides assurance to providers that data requests can be clearly defined and are fully implementable. As a consensus-based, open source standard, providers have an equal voice along with cities in the ongoing development of the GBFS specification. Comprehensive documentation and resources are available to cities and providers alike to aid in implementation. For consumers, data standardization allows application developers to aggregate data from multiple providers across multiple markets. GBFS can eliminate the need for bespoke solutions for each mobility system. For cities, requiring GBFS data as part of a shared mobility program can help to increase access to shared mobility services. Standardization of mobility data through GBFS has resulted in a growing marketplace of data management software and services. These products and services are used to assist cities in working with GBFS data to effectively manage and regulate mobility services. Does GBFS contain personal data? GBFS does not contain personal data. Given the real-time nature of the data, as well as other safety measures such as rotating bike_id, a user\u2019s information will never be shared and a user or individual trips will not be able to be traced. Does GBFS contain operational data? GBFS does not contain operational data. GBFS only contains real-time data that is beneficial to the customer for their trips.","title":"Uses of GBFS"},{"location":"faq/#systemscsv","text":"What is systems.csv? systems.csv is a list of all the known systems that publish public GBFS feeds. Why is systems.csv important? systems.csv is the primary index of GBFS data sources, it allows developers to build software on top of it, provides a source for research projects, and demonstrates the reach of the specification worldwide. Who updates systems.csv? systems.csv is currently maintained by MobilityData and community members. If you have or are aware of a system that does not appear on the list please add it by opening a pull request. Are all of the systems in systems.csv compliant with the specification? No - there is no compliance or validation requirement for inclusion in systems.csv. To be considered fully compliant with GBFS, systems MUST have an entry in the systems.csv file.","title":"systems.csv"},{"location":"faq/#shared-mobility","text":"What is shared mobility? Shared mobility encompasses both micromobility, such as bikeshare and scooters, as well as other larger types of mobility, such as carsharing. What is shared micromobility? Shared micromobility typically refers to small, lightweight mobility devices with speeds below 25km/h that are hired by the end user. Examples include bikes, ebikes, scooters, etc. Why is GBFS named GBFS if it covers modes other than bikes? While GBFS has its roots in bikeshare, it has been expanded as the shared mobility industry has evolved to encompass all forms of shared mobility vehicles.","title":"Shared Mobility"},{"location":"faq/#governance-and-change-process","text":"How is the specification updated? GBFS is an open source project developed under a consensus-based governance model. Contributors come from across the shared mobility industry, public sector, civic technology and elsewhere. Proposals for changes or additions to the specification are made through Pull Requests. Once the community has had adequate time to comment and iterate on a proposal, the proposal is put to a vote. If the proposal passes, it becomes part of a release candidate. When the release candidate has been successfully implemented in a public data set, it becomes an official release. The complete governance and change process can be found here . How can I propose a change to the specification? If you are interested in proposing a modification, you can do so at the GBFS GitHub repo. If you do not have the solution to the problem and would like to start a discussion, we recommend you open an issue . If you have a solution and would like to propose a change, please open a Pull Request .","title":"Governance and Change Process"},{"location":"faq/#github","text":"What is GitHub? GitHub is a website and service that allows people to work collaboratively on software and other projects. GitHub provides discussion forums and supports version control, which is an important part of managing and storing versions of a software project. What is a repository? A repository, often called a \u201crepo\u201d, is a place where all of a project's documents and versions are stored. What is a GitHub issue? An issue on GitHub is a place for discussion. Anyone can open an issue to spark conversation about the specification, be it a direction you would like to see the spec take, or a problem you are experiencing in using the specification. What is a GitHub pull request? A pull request is a request to change the specification. Anyone can open a pull request and open the floor to comments and discussion. Pull requests are then voted on to see whether or not they should be merged into the specification.","title":"GitHub"},{"location":"faq/#working-with-gbfs","text":"","title":"Working with GBFS"},{"location":"faq/#best-practices","text":"What are GBFS Best Practices? GBFS Best Practices are recommendations we provide that are not required under the specification, but that make your data amazing! They are identified in the documentation using the keywords \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", and \"NOT RECOMMENDED\" and are to be interpreted as described in RFC2119 , BCP 14 and RFC8174 when, and only when, they appear in all capitals, as shown here. Why are GBFS Best Practices important? GBFS Best Practices are important so that the end user has access to the most reliable and complete information without compromising their privacy. Do GBFS validator tools check for conformance with Best Practices? Validator tools do not check for conformance with Best Practices, since they are not explicit in the specification. It is recommended to use a manual approach to ensure conformance with Best Practices. What should I do if I notice a GBFS data feed does not conform to Best Practices? If you notice a data feed does not conform to Best Practices, you can try to contact the publisher using their feed contact email found in system_information.json . How can I to propose a modification/addition to Best Practices? If you would like to propose a modification to Best Practices, please do so by either opening an Issue or Pull Request via GitHub. What does is mean to rotate bike_id and why is it important? The bike_id field is a unique identifier for each vehicle in a system. Rotating bike_id means that a vehicle\u2019s ID will change to a random string each time a rental ends. Use of persistent vehicle IDs poses a threat to user privacy. This is especially important for dockless mobility systems, where a user may end or begin their trip in front of their home or other frequently visited locations.","title":"Best Practices"},{"location":"faq/#validation","text":"What does it mean to validate a GBFS feed? Using a validator ensures that your data conforms to the requirements set out by the specification. In a nutshell, a validator ensures you have a valid GBFS feed. Does MobilityData have a GBFS validator? Currently, MobilityData does not have a GBFS validator, however we have plans to build a canonical validator in 2021. In the meantime, there are a handful of community-built validators and other tools available; check out our Tools page for the list.","title":"Validation"},{"location":"faq/#glossary","text":"API - An API (Application Program Interface) communicates with two applications. A common analogy for explaining an API is to think of a restaurant; you are one \u201csystem\u201d, and the kitchen is another. An intermediary is needed to communicate what you want the kitchen to do for you. That intermediary, in this case the server, is the equivalent of an API. API endpoint - An API endpoint is the specific digital location where requests for information are sent by one program and where the resource lives. Consumer - A consumer is someone who is using GBFS data. Examples of GBFS consumers are trip planning applications, researchers and regulators. Deeplink - A deeplink is a link that takes you to specific content rather than a general homepage. In the context of GBFS, a deeplink would take you to the rental page for that specific vehicle or station, rather than the system\u2019s homepage. Geofencing - A geofence is a virtual boundary that defines a geographic area. When a shared mobility vehicle enters or exits a geofenced area, events can be triggered, for example a push notification can be sent to a user\u2019s phone. Geofencing may be used to delineate pick up and drop off zones, no-ride zones, speed limit zones, equity zones, etc. Provider - A producer is the entity that is publishing GBFS, most often the system operator. Station - A station is a location where shared mobility vehicles are made available for rent. Stations may include physical infrastructure like rental kiosks, docks or racks, or they may be virtual, delineated by pavement markings. System - A system is the entirety of the shared mobility service from a single provider. Systems can be made up of docking stations, vehicles, and other infrastructure, and are typically limited to the local geography in which they operate. Vehicle - A system\u2019s fleet is made up of individual vehicles. Some systems may have multiple vehicle types, whereas others may only have one. Examples of shared mobility vehicles are bikes, ebikes, scooters, and mopeds.","title":"Glossary"},{"location":"faq/#mobilitydata","text":"How do I get involved? There are a number of ways you can get involved with our organization and the Shared Mobility community! Join our slack: bit.ly/mobilitydata-slack Join us on Github: github.com/NABSA/gbfs Become a member: bit.ly/Membership-form-2021 What does it mean to be a MobilityData member? MobilityData has two membership types: Core Member : Core Members are voting members, who have the opportunity to join any working group, an invitation to send up to two representatives to any of our workshops with no fee, early access to new tools and services (exclusive access for the first three months), a stronger influence on our roadmap, and recognition on MobilityData\u2019s website as a Core Member. Regular Member : Regular Members are non-voting members who receive updates on MobilityData\u2019s projects, an invitation for one representative to attend one MobilityData workshop each year, occasional invitations to selected working groups and discussions, and recognition on MobilityData\u2019s website as a Regular Member. For more information check out MobilityData's website . How do I become a MobilityData member? To become a MobilityData member, please fill out this form . If you have questions about membership, please contact gretchen@mobilitydata.org","title":"MobilityData"},{"location":"major-change-proposals/","text":"Major Change Proposals \u00b6 GBFS is continually being modified and updated to reflect the needs of the shared mobility industry. To see what we are currently working on, visit our Major Change Proposals page. To see what we are planning on working on, visit our roadmap at https://github.com/NABSA/gbfs/wiki/Roadmap . If you have a specific need that is not being met by the specification or by one of these proposals, please do not hesitate to join the conversation at https://github.com/NABSA/gbfs or at https://mobilitydata-io.herokuapp.com . GBFS-Carsharing \u00b6 Carsharing has become increasingly popular, especially in Europe. Incorporating carsharing services into GBFS would allow users to have access to more options when deciding on which mode of transport is most beneficial to them. With the adoption of dockless bikes and scooters into GBFS, the specification is now able to handle free floating micromobility services. The fields that exist for dockless micromobility offer a solid foundation to model carsharing, however they lack the added specificity that a carsharing service would need. The goal of this proposal is to fill this gap by extending: vehicle_types.json to allow for more detailed descriptions of vehicles due to the variation in carsharing fleets station_information.json to allow for more detailed descriptions of stations, such as hours of operation or access methods, for example. system_pricing_plans.json to allow for information and pricing regarding reserving a vehicle. Links Working document: GBFS-Carsharing v2 Pull request #255: Support for carsharing Want to suggest a modification to the specification? \u00b6 Check us out on GitHub and join the conversation! Not sure how to go about suggesting a modification? \u00b6 Read our FAQ page for more details.","title":"Major Change Proposals"},{"location":"major-change-proposals/#major-change-proposals","text":"GBFS is continually being modified and updated to reflect the needs of the shared mobility industry. To see what we are currently working on, visit our Major Change Proposals page. To see what we are planning on working on, visit our roadmap at https://github.com/NABSA/gbfs/wiki/Roadmap . If you have a specific need that is not being met by the specification or by one of these proposals, please do not hesitate to join the conversation at https://github.com/NABSA/gbfs or at https://mobilitydata-io.herokuapp.com .","title":"Major Change Proposals"},{"location":"major-change-proposals/#gbfs-carsharing","text":"Carsharing has become increasingly popular, especially in Europe. Incorporating carsharing services into GBFS would allow users to have access to more options when deciding on which mode of transport is most beneficial to them. With the adoption of dockless bikes and scooters into GBFS, the specification is now able to handle free floating micromobility services. The fields that exist for dockless micromobility offer a solid foundation to model carsharing, however they lack the added specificity that a carsharing service would need. The goal of this proposal is to fill this gap by extending: vehicle_types.json to allow for more detailed descriptions of vehicles due to the variation in carsharing fleets station_information.json to allow for more detailed descriptions of stations, such as hours of operation or access methods, for example. system_pricing_plans.json to allow for information and pricing regarding reserving a vehicle. Links Working document: GBFS-Carsharing v2 Pull request #255: Support for carsharing","title":"GBFS-Carsharing"},{"location":"major-change-proposals/#want-to-suggest-a-modification-to-the-specification","text":"Check us out on GitHub and join the conversation!","title":"Want to suggest a modification to the specification?"},{"location":"major-change-proposals/#not-sure-how-to-go-about-suggesting-a-modification","text":"Read our FAQ page for more details.","title":"Not sure how to go about suggesting a modification?"},{"location":"reference/","text":"General Bikeshare Feed Specification (GBFS) \u00b6 This document explains the types of files and data that comprise the General Bikeshare Feed Specification (GBFS) and defines the fields used in all of those files. Reference version \u00b6 This documentation refers to v2.2 . For past and upcoming versions see the README . Terminology \u00b6 The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 , BCP 14 and RFC8174 when, and only when, they appear in all capitals, as shown here. Table of Contents \u00b6 Introduction Version Endpoints Term Definitions Files Accessibility File Requirements Licensing Field Types Files gbfs.json gbfs_versions.json (added in v1.1) system_information.json vehicle_types.json (added in v2.1) station_information.json station_status.json free_bike_status.json system_hours.json system_calendar.json system_regions.json system_pricing_plans.json system_alerts.json geofencing_zones.json (added in v2.1) Deep Links - Analytics and Examples (added in v1.1) Introduction \u00b6 This specification has been designed with the following concepts in mind: Provide the status of the system at this moment Do not provide information whose primary purpose is historical The specification supports real-time travel advice in GBFS-consuming applications. Version Endpoints \u00b6 The version of the GBFS specification to which a feed conforms is declared in the version field in all files. See Output Format . GBFS Best Practice defines that: GBFS producers SHOULD provide endpoints that conform to both the current specification long term support (LTS) branch as well as the latest release branch within at least 3 months of a new spec MAJOR or MINOR version release. It is not necessary to support more than one MINOR release of the same MAJOR release group because MINOR releases are backwards-compatible. See specification versioning GBFS consumers SHOULD, at a minimum, support the current LTS branch. It is highly RECOMMENDED that GBFS consumers support later releases. Default GBFS feed URLs, e.g. https://www.example.com/data/gbfs.json or https://www.example.com/data/fr/system_information.json MUST direct consumers to the feed that conforms to the current LTS documentation branch. Term Definitions \u00b6 This section defines terms that are used throughout this document. JSON - (JavaScript Object Notation) is a lightweight format for storing and transporting data. This document uses many terms defined by the JSON standard, including field, array, and object. (https://www.w3schools.com/js/js_json_datatypes.asp) Field - In JSON, a name/value pair consists of a field name (in double quotes), followed by a colon, followed by a value. (https://www.w3schools.com/js/js_json_syntax.asp) GeoJSON - GeoJSON is a format for encoding a variety of geographic data structures. (https://geojson.org/) REQUIRED - The field MUST be included in the dataset, and a value MUST be provided in that field for each record. OPTIONAL - The field MAY be omitted from the dataset. If an OPTIONAL column is included, some of the entries in that field MAY be empty strings. An omitted field is equivalent to a field that is empty. Conditionally REQUIRED - The field or file is REQUIRED under certain conditions, which are outlined in the field or file description. Outside of these conditions, this field or file is OPTIONAL. Files \u00b6 File Name REQUIRED Defines gbfs.json Yes (as of v2.0) Auto-discovery file that links to all of the other files published by the system. gbfs_versions.json (added in v1.1) OPTIONAL Lists all feed endpoints published according to versions of the GBFS documentation. system_information.json Yes Details including system operator, system location, year implemented, URL, contact info, time zone. vehicle_types.json (added in v2.1) Conditionally REQUIRED Describes the types of vehicles that System operator has available for rent. REQUIRED of systems that include information about vehicle types in the free_bike_status file. If this file is not included, then all vehicles in the feed are assumed to be non-motorized bicycles. station_information.json Conditionally REQUIRED List of all stations, their capacities and locations. REQUIRED of systems utilizing docks. station_status.json Conditionally REQUIRED Number of available vehicles and docks at each station and station availability. REQUIRED of systems utilizing docks. free_bike_status.json Conditionally REQUIRED (as of v2.1) Describes all vehicles that are not currently in active rental. REQUIRED for free floating (dockless) vehicles. OPTIONAL for station based (docked) vehicles. Vehicles that are part of an active rental MUST NOT appear in this feed. system_hours.json OPTIONAL Hours of operation for the system. system_calendar.json OPTIONAL Dates of operation for the system. system_regions.json OPTIONAL Regions the system is broken up into. system_pricing_plans.json OPTIONAL System pricing scheme. system_alerts.json OPTIONAL Current system alerts. geofencing_zones.json (added in v2.1) OPTIONAL Geofencing zones and their associated rules and attributes. Accessibility \u00b6 Datasets SHOULD be published at an easily accessible, public, permanent URL. (e.g., www.agency.org/gbfs/v2-2/gbfs.json). The URL SHOULD be directly available without requiring login to access the file to facilitate download by consuming software applications. To be compliant with GBFS, all systems MUST have an entry in the systems.csv file. Feed Availability \u00b6 Automated tools for application performance monitoring SHOULD be used to ensure feed availability. Producers SHOULD provide a technical contact who can respond to feed outages in the feed_contact_email field in the system_information.json file. Seasonal Shutdowns, Disruptions of Service \u00b6 Feeds SHOULD continue to be published during seasonal or temporary shutdowns. Feed URLs SHOULD NOT return a 404. An empty bikes array SHOULD be returned by free_bike_status.json . Stations in station_status.json SHOULD be set to is_renting:false , is_returning:false and is_installed:false where applicable. Seasonal shutdown dates SHOULD be reflected in system_calendar.json . Announcements for disruptions of service, including disabled stations or temporary closures of stations or systems SHOULD be made in system_alerts.json . File Requirements \u00b6 All files SHOULD be valid JSON All files in the spec MAY be published at a URL path or with an alternate name (e.g., station_info instead of station_information.json ) (as of v2.0) . All data SHOULD be UTF-8 encoded Line breaks SHOULD be represented by unix newline characters only (\\n) Pagination is not supported. File Distribution \u00b6 Files are distributed as individual HTTP endpoints. REQUIRED files MUST NOT 404. They MUST return a properly formatted JSON file as defined in Output Format . OPTIONAL files MAY 404. A 404 of an OPTIONAL file SHOULD NOT be considered an error. Auto-Discovery \u00b6 Publishers SHOULD implement auto-discovery of GBFS feeds by linking to the location of the gbfs.json auto-discovery endpoint. * The location of the auto-discovery file SHOULD be provided in the HTML area of the shared mobility landing page hosted at the URL specified in the URL field of the system_infomation.json file. This is referenced via a link tag with the following format: <link rel=\"gbfs\" type=\"application/json\" href=\"https://www.example.com/data/gbfs.json\" /> References: http://microformats.org/wiki/existing-rel-values http://microformats.org/wiki/rel-faq#How_is_rel_used A shared mobility landing page MAY contain links to auto-discovery files for multiple systems. Localization \u00b6 Each set of data files SHOULD be distributed in a single language as defined in system_information.json. A system that wants to publish feeds in multiple languages SHOULD do so by publishing multiple distributions, such as: https://www.example.com/data/en/system_information.json https://www.example.com/data/fr/system_information.json Text Fields and Naming \u00b6 Rich text SHOULD NOT be stored in free form text fields. Fields SHOULD NOT contain HTML. All customer-facing text strings (including station names) SHOULD use Mixed Case (not ALL CAPS), following local conventions for capitalization of place names on displays capable of displaying lower case characters. Examples: Central Park South Villiers-sur-Marne Market Street Abbreviations SHOULD NOT be used for names and other text (e.g. St. for Street) unless a location is called by its abbreviated name (e.g. \u201cJFK Airport\u201d). Abbreviations may be problematic for accessibility by screen reader software and voice user interfaces. Consuming software can be engineered to reliably convert full words to abbreviations for display, but converting from abbreviations to full words is prone to more risk of error. Names used for stations, virtual stations and geofenced areas SHOULD be human readable. Naming conventions used for locations SHOULD consider a variety of use cases including both text and maps. Descriptions SHOULD NOT include information so specific that it could be used in tracking of vehicles or trips. Coordinate Precision \u00b6 Feeds SHOULD provide 6 digits (0.000001) of precision for decimal degrees lat/lon coordinates. Decimal places Degrees Distance at the Equator 0 1.0 111 km 1 0.1 11.1 km 2 0.01 1.11 km 3 0.001 111 m 4 0.0001 11.1 m 5 0.00001 1.11 m 6 0.000001 0.11 m 7 0.0000001 1.11 cm Data Latency \u00b6 The data returned by the near-realtime endpoints station_status.json and free_bike_status.json SHOULD be as close to realtime as possible, but in no case should it be more than 5 minutes out-of-date. Appropriate values SHOULD be set using the ttl property for each endpoint based on how often the data in feeds are refreshed or updated. For near-realtime endpoints where the data should always be refreshed the ttl value SHOULD be 0 . The last_updated timestamp represents the publisher's knowledge of the current state of the system at this point in time. The last_reported timestamp represents the last time a station or vehicle reported its status to the operator's backend. Licensing \u00b6 It is RECOMMENDED that all GBFS data sets be offered under an open data license. Open data licenses allow consumers to freely use, modify and share GBFS data for any purpose in perpetuity. Licensing of GBFS data provides certainty to GBFS consumers, allowing them to integrate GBFS data into their work. All GBFS data sets SHOULD specify a license using the license_id field with an SPDX identifier or by using the license_url field with a URL pointing to a custom license in system_information.json . See the GBFS repo for a comparison of a subset of standard licenses . Field Types \u00b6 Array - A JSON element consisting of an ordered sequence of zero or more values. Boolean - One of two possible values, true or false . Boolean values MUST be JSON booleans, not strings (i.e. true or false , not \"true\" or \"false\" ). (as of v2.0) Date - Service day in the YYYY-MM-DD format. Example: 2019-09-13 for September 13th, 2019. Email - An email address. Example: example@example.com Enum (Enumerable values) - An option from a set of predefined constants in the \"Defines\" column. Enum values SHOULD be lowercase. Example: The rental_methods field contains values creditcard , paypass , etc... Float (added in v2.1) - A 32-bit floating point number. GeoJSON FeatureCollection - A FeatureCollection as described by the IETF RFC 7946 https://tools.ietf.org/html/rfc7946#section-3.3. GeoJSON Multipolygon - A Geometry Object as described by the IETF RFC https://tools.ietf.org/html/rfc7946#section-3.1.7. ID - Should be represented as a string that identifies that particular entity. An ID: MUST be unique within like fields (e.g. station_id MUST be unique among stations) does not have to be globally unique, unless otherwise specified MUST NOT contain spaces MUST be persistent for a given entity (station, plan, etc). An exception is floating bike bike_id , which MUST NOT be persistent for privacy reasons (see free_bike_status.json ). (as of v2.0) Language - An IETF BCP 47 language code. For an introduction to IETF BCP 47, refer to http://www.rfc-editor.org/rfc/bcp/bcp47.txt and http://www.w3.org/International/articles/language-tags/. Examples: en for English, en-US for American English, or de for German. Latitude - WGS84 latitude in decimal degrees. The value MUST be greater than or equal to -90.0 and less than or equal to 90.0. Example: 41.890169 for the Colosseum in Rome. Longitude - WGS84 longitude in decimal degrees. The value MUST be greater than or equal to -180.0 and less than or equal to 180.0. Example: 12.492269 for the Colosseum in Rome. Non-negative Float - A 32-bit floating point number greater than or equal to 0. Non-negative Integer - An integer greater than or equal to 0. Object - A JSON element consisting of key-value pairs (fields). String - Can only contain text. Strings MUST NOT contain any formatting codes (including HTML) other than newlines. Time - Service time in the HH:MM:SS format for the time zone indicated in system_information.json (00:00:00 - 47:59:59). Time can stretch up to one additional day in the future to accommodate situations where, for example, a system was open from 11:30pm - 11pm the next day (i.e. 23:30:00-47:00:00). Timestamp - Timestamp fields MUST be represented as integers in POSIX time. (e.g., the number of seconds since January 1st 1970 00:00:00 UTC) Timezone - TZ timezone from the https://www.iana.org/time-zones. Timezone names never contain the space character but MAY contain an underscore. Refer to http://en.wikipedia.org/wiki/List_of_tz_zones for a list of valid values. Example: Asia/Tokyo , America/Los_Angeles or Africa/Cairo . URI (added in v1.1) - A fully qualified URI that includes the scheme (e.g., com.abcrental.android:// ), and any special characters in the URI MUST be correctly escaped. See the following http://www.w3.org/Addressing/URL/4_URI_Recommentations.html for a description of how to create fully qualified URI values. Note that URIs MAY be URLs. URL - A fully qualified URL that includes http:// or https:// , and any special characters in the URL MUST be correctly escaped. See the following http://www.w3.org/Addressing/URL/4_URI_Recommentations.html for a description of how to create fully qualified URL values. Extensions Outside of the Specification \u00b6 To accommodate the needs of feed producers and consumers prior to the adoption of a change, additional fields can be added to feeds even if these fields are not part of the official specification. Custom extensions that may provide value to the GBFS community and align with the GBFS Guiding Principles SHOULD be proposed for inclusion in the specification through the change process. Field names of extensions SHOULD be prefixed with an underscore ( _) character. It is strongly RECOMMENDED that these additional fields be documented on the wiki page of the GBFS repository in this format: Submitted by Field Name File Name Defines Publisher's name _field_name Name of GBFS endpoint where field is used Description of purpose of use JSON Files \u00b6 Output Format \u00b6 Every JSON file presented in this specification contains the same common header information at the top level of the JSON response object: Field Name REQUIRED Type Defines last_updated Yes Timestamp Indicates the last time data in the feed was updated. This timestamp represents the publisher's knowledge of the current state of the system at this point in time. ttl Yes Non-negative integer Number of seconds before the data in the feed will be updated again (0 if the data should always be refreshed). version (added in v1.1) Yes String GBFS version number to which the feed confirms, according to the versioning framework. data Yes Object Response data in the form of name:value pairs. Example: { \"last_updated\" : 1609866247 , \"ttl\" : 3600 , \"version\" : \"2.2\" , \"data\" : { \"name\" : \"Citi Bike\" , \"system_id\" : \"citibike_com\" } } gbfs.json \u00b6 The gbfs.json discovery file SHOULD represent a single system or geographic area in which vehicles are operated. The location (URL) of the gbfs.json file SHOULD be made available to the public using the specification\u2019s auto-discovery function. Field Name REQUIRED Type Defines language Yes Language The language that will be used throughout the rest of the files. It MUST match the value in the system_information.json file. - feeds Yes Array An array of all of the feeds that are published by this auto-discovery file. Each element in the array is an object with the keys below. \u2003- name Yes String Key identifying the type of feed this is. The key MUST be the base file name defined in the spec for the corresponding feed type ( system_information for system_information.json file, station_information for station_information.json file). \u2003- url Yes URL URL for the feed. Note that the actual feed endpoints (urls) MAY NOT be defined in the file_name.json format. For example, a valid feed endpoint could end with station_info instead of station_information.json . Example: { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" : { \"en\" : { \"feeds\" : [ { \"name\" : \"system_information\" , \"url\" : \"https://www.example.com/gbfs/1/en/system_information\" }, { \"name\" : \"station_information\" , \"url\" : \"https://www.example.com/gbfs/1/en/station_information\" } ] }, \"fr\" : { \"feeds\" : [ { \"name\" : \"system_information\" , \"url\" : \"https://www.example.com/gbfs/1/fr/system_information\" }, { \"name\" : \"station_information\" , \"url\" : \"https://www.example.com/gbfs/1/fr/station_information\" } ] } } } gbfs_versions.json (added in v1.1) \u00b6 Each expression of a GBFS feed describes all of the versions that are available. The following fields are all attributes within the main \"data\" object for this feed. Field Name REQUIRED Type Defines versions Yes Array Contains one object, as defined below, for each of the available versions of a feed. The array MUST be sorted by increasing MAJOR and MINOR version number. - version Yes String The semantic version of the feed in the form X.Y . - url Yes URL URL of the corresponding gbfs.json endpoint. Example: { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" : { \"versions\" : [ { \"version\" : \"2.0\" , \"url\" : \"https://www.example.com/gbfs/2/gbfs\" }, { \"version\" : \"2.2\" , \"url\" : \"https://www.example.com/gbfs/2-2/gbfs\" } ] } } system_information.json \u00b6 The following fields are all attributes within the main \"data\" object for this feed. Field Name REQUIRED Type Defines system_id Yes ID This is a globally unique identifier for the vehicle share system. It is up to the publisher of the feed to guarantee uniqueness and MUST be checked against existing system_id fields in systems.txt to ensure this. This value is intended to remain the same over the life of the system. Each distinct system or geographic area in which vehicles are operated SHOULD have its own system_id . Systems IDs SHOULD be recognizable as belonging to a particular system as opposed to random strings - for example, bcycle_austin or biketown_pdx . language Yes Language The language that will be used throughout the rest of the files. It MUST match the value in the gbfs.json file. name Yes String Name of the system to be displayed to customers. short_name OPTIONAL String OPTIONAL abbreviation for a system. operator OPTIONAL String Name of the system operator. url OPTIONAL URL The URL of the vehicle share system. purchase_url OPTIONAL URL URL where a customer can purchase a membership. start_date OPTIONAL Date Date that the system began operations. phone_number OPTIONAL Phone Number This OPTIONAL field SHOULD contain a single voice telephone number for the specified system\u2019s customer service department. It can and SHOULD contain punctuation marks to group the digits of the number. Dialable text (for example, Capital Bikeshare\u2019s \"877-430-BIKE\") is permitted, but the field MUST NOT contain any other descriptive text. email OPTIONAL Email This OPTIONAL field SHOULD contain a single contact email address actively monitored by the operator\u2019s customer service department. This email address SHOULD be a direct contact point where riders can reach a customer service representative. feed_contact_email (added in v1.1) OPTIONAL Email This OPTIONAL field SHOULD contain a single contact email for feed consumers to report technical issues with the feed. timezone Yes Timezone The time zone where the system is located. license_url Conditionally REQUIRED (as of v3.0-RC) URL REQUIRED if the dataset is provided under a customized license. A fully qualified URL of a page that defines the license terms for the GBFS data for this system. Do not specify a license_url if license_id is specified. If the license_id and license_url fields are blank or omitted, this indicates that the feed is provided under the Creative Commons Universal Public Domain Dedication . (as of v3.0-RC) rental_apps (added in v1.1) OPTIONAL Object Contains rental app information in the android and ios JSON objects. - android (added in v1.1) OPTIONAL Object Contains rental app download and app discovery information for the Android platform in the store_uri and discovery_uri fields. See examples of how to use these fields and supported analytics . \u2003- store_uri (added in v1.1) Conditionally REQUIRED URI URI where the rental Android app can be downloaded from. Typically this will be a URI to an app store such as Google Play. If the URI points to an app store such as Google Play, the URI SHOULD follow Android best practices so the viewing app can directly open the URI to the native app store app instead of a website. If a rental_uris . android field is populated then this field is REQUIRED, otherwise it is OPTIONAL. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. Example value: https://play.google.com/store/apps/details?id=com.abcrental.android \u2003- discovery_uri (added in v1.1) Conditionally REQUIRED URI URI that can be used to discover if the rental Android app is installed on the device (e.g., using PackageManager.queryIntentActivities() ). This intent is used by viewing apps to prioritize rental apps for a particular user based on whether they already have a particular rental app installed. This field is REQUIRED if a rental_uris . android field is populated, otherwise it is OPTIONAL. Example value: com.abcrental.android:// - ios (added in v1.1) OPTIONAL Object Contains rental information for the iOS platform in the store_uri and discovery_uri fields. See examples of how to use these fields and supported analytics . \u2003- store_uri (added in v1.1) Conditionally REQUIRED URI URI where the rental iOS app can be downloaded from. Typically this will be a URI to an app store such as the Apple App Store. If the URI points to an app store such as the Apple App Store, the URI SHOULD follow iOS best practices so the viewing app can directly open the URI to the native app store app instead of a website. If a rental_uris . ios field is populated then this field is REQUIRED, otherwise it is OPTIONAL. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. Example value: https://apps.apple.com/app/apple-store/id123456789 \u2003- discovery_uri (added in v1.1) Conditionally REQUIRED URI URI that can be used to discover if the rental iOS app is installed on the device (e.g., using UIApplication canOpenURL: ). This intent is used by viewing apps to prioritize rental apps for a particular user based on whether they already have a particular rental app installed. This field is REQUIRED if a rental_uris . ios field is populated, otherwise it is OPTIONAL. Example value: com.abcrental.ios:// Example: { \"last_updated\" : 1611598155 , \"ttl\" : 1800 , \"version\" : \"2.2\" , \"data\" :{ \"phone_number\" : \"1-800-555-1234\" , \"name\" : \"Example Ride\" , \"operator\" : \"Example Sharing, Inc\" , \"start_date\" : \"2010-06-10\" , \"purchase_url\" : \"https://www.exampleride.org\" , \"timezone\" : \"US/Central\" , \"license_url\" : \"https://exampleride.org/data-license.html\" , \"short_name\" : \"Example Ride\" , \"email\" : \"customerservice@exampleride.org\" , \"url\" : \"http://www.exampleride.org\" , \"feed_contact_email\" : da tafee d@exampleride.org , \"system_id\" : \"exampleride\" , \"language\" : \"en\" , } } vehicle_types.json (added in v2.1) \u00b6 REQUIRED of systems that include information about vehicle types in the free_bike_status file. If this file is not included, then all vehicles in the feed are assumed to be non-motorized bicycles. This file SHOULD be published by systems offering multiple vehicle types for rental, for example pedal bikes and ebikes. The following fields are all attributes within the main \"data\" object for this feed. Field Name REQUIRED Type Defines vehicle_types Yes Array Array that contains one object per vehicle type in the system as defined below. - vehicle_type_id Yes ID Unique identifier of a vehicle type. See Field Types above for ID field requirements. - form_factor Yes Enum The vehicle's general form factor. Current valid values are: bicycle car moped scooter other - propulsion_type Yes Enum The primary propulsion type of the vehicle. Current valid values are: human (Pedal or foot propulsion) electric_assist (Provides power only alongside human propulsion) electric (Contains throttle mode with a battery-powered motor) combustion (Contains throttle mode with a gas engine-powered motor) This field was inspired by, but differs from the propulsion types field described in the Open Mobility Foundation Mobility Data Specification . - max_range_meters Conditionally REQUIRED Non-negative float If the vehicle has a motor (as indicated by having a value other than human in the propulsion_type field), this field is REQUIRED. This represents the furthest distance in meters that the vehicle can travel without recharging or refueling when it has the maximum amount of energy potential (for example, a full battery or full tank of gas). - name OPTIONAL String The public name of this vehicle type. Example: { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" : { \"vehicle_types\" : [ { \"vehicle_type_id\" : \"abc123\" , \"form_factor\" : \"bicycle\" , \"propulsion_type\" : \"human\" , \"name\" : \"Example Basic Bike\" }, { \"vehicle_type_id\" : \"def456\" , \"form_factor\" : \"scooter\" , \"propulsion_type\" : \"electric\" , \"name\" : \"Example E-scooter V2\" , \"max_range_meters\" : 12345 }, { \"vehicle_type_id\" : \"car1\" , \"form_factor\" : \"car\" , \"propulsion_type\" : \"combustion\" , \"name\" : \"Foor-door Sedan\" , \"max_range_meters\" : 523992 } ] } } station_information.json \u00b6 All stations included in station_information.json are considered public (e.g., can be shown on a map for public use). If there are private stations (such as Capital Bikeshare\u2019s White House station), these SHOULD NOT be included here. Any station that is represented in station_information.json MUST have a corresponding entry in station_status.json . Field Name REQUIRED Type Defines stations Yes Array Array that contains one object per station as defined below. - station_id Yes ID Identifier of a station. - name Yes String The public name of the station for display in maps, digital signage and other text applications. Names SHOULD reflect the station location through the use of a cross street or local landmark. Abbreviations SHOULD NOT be used for names and other text (e.g. St. for Street) unless a location is called by its abbreviated name (e.g. \u201cJFK Airport\u201d). See Text Fields and Naming . Examples: Broadway and East 22nd Street Convention Center Central Park South - short_name OPTIONAL String Short name or other type of identifier. - lat Yes Latitude Latitude of the station in decimal degrees. This field SHOULD have a precision of 6 decimal places (0.000001). See Coordinate Precision . - lon Yes Longitude Longitude of the station in decimal degrees. This field SHOULD have a precision of 6 decimal places (0.000001). See Coordinate Precision . - address OPTIONAL String Address (street number and name) where station is located. This MUST be a valid address, not a free-form text description. Example: 1234 Main Street - cross_street OPTIONAL String Cross street or landmark where the station is located. - region_id OPTIONAL ID Identifier of the region where station is located. See system_regions.json . - post_code OPTIONAL String Postal code where station is located. - rental_methods OPTIONAL Array Payment methods accepted at this station. Current valid values are: key (e.g. operator issued vehicle key / fob / card) creditcard paypass applepay androidpay transitcard accountnumber phone - is_virtual_station (added in v2.1) OPTIONAL Boolean Is this station a location with or without physical infrastructures (docks)? true - The station is a location without physical infrastructure, defined by a point (lat/lon) and/or station_area (below). false - The station consists of physical infrastructure (docks). If this field is empty, it means the station consists of physical infrastructure (docks). This field SHOULD be published in systems that have station locations without standard, internet connected physical docking infrastructure. These may be racks or geofenced areas designated for rental and/or return of vehicles. Locations that fit within this description SHOULD have the is_virtual_station boolean set to true . - station_area (added in v2.1) OPTIONAL GeoJSON Multipolygon A GeoJSON multipolygon that describes the area of a virtual station. If station_area is supplied then the record describes a virtual station. If lat/lon and station_area are both defined, the lat/lon is the significant coordinate of the station (e.g. dock facility or valet drop-off and pick up point). The station_area takes precedence over any ride_allowed rules in overlapping geofencing_zones . - capacity OPTIONAL Non-negative integer Number of total docking points installed at this station, both available and unavailable, regardless of what vehicle types are allowed at each dock. If this is a virtual station defined using the is_virtual_station field, this number represents the total number of vehicles of all types that can be parked at the virtual station. If the virtual station is defined by station_area , this is the number that can park within the station area. If lat / lon are defined, this is the number that can park at those coordinates. - vehicle_capacity (added in v2.1) OPTIONAL Object An object used to describe the parking capacity of virtual stations (defined using the is_virtual_station field), where each key is a vehicle_type_id as described in vehicle_types.json and the value is a number representing the total number of vehicles of this type that can park within the virtual station. If the virtual station is defined by station_area , this is the number that can park within the station area. If lat / lon is defined, this is the number that can park at those coordinates. - vehicle_type_capacity (added in v2.1) OPTIONAL Object An object used to describe the docking capacity of a station where each key is a vehicle_type_id as described in vehicle_types.json and the value is a number representing the total docking points installed at this station, both available and unavailable for the specified vehicle type. - is_valet_station (added in v2.1) OPTIONAL Boolean Are valet services provided at this station? true - Valet services are provided at this station. false - Valet services are not provided at this station. If this field is empty, it is assumed that valet services are not provided at this station. This field\u2019s boolean SHOULD be set to true during the hours which valet service is provided at the station. Valet service is defined as providing unlimited capacity at a station. - rental_uris (added in v1.1) OPTIONAL Object Contains rental URIs for Android, iOS, and web in the android, ios, and web fields. See examples of how to use these fields and supported analytics . \u2003- android (added in v1.1) OPTIONAL URI URI that can be passed to an Android app with an android.intent.action.VIEW Android intent to support Android Deep Links (https://developer.android.com/training/app-links/deep-linking). Please use Android App Links (https://developer.android.com/training/app-links) if possible so viewing apps don\u2019t need to manually manage the redirect of the user to the app store if the user doesn\u2019t have the application installed. This URI SHOULD be a deep link specific to this station, and SHOULD NOT be a general rental page that includes information for more than one station. The deep link SHOULD take users directly to this station, without any prompts, interstitial pages, or logins. Make sure that users can see this station even if they never previously opened the application. If this field is empty, it means deep linking isn\u2019t supported in the native Android rental app. Note that URIs do not necessarily include the station_id for this station - other identifiers can be used by the rental app within the URI to uniquely identify this station. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. Android App Links example value: https://www.abc.com/app?sid=1234567890&platform=android Deep Link (without App Links) example value: com.abcrental.android://open.abc.app/app?sid=1234567890 \u2003- ios (added in v1.1) OPTIONAL URI URI that can be used on iOS to launch the rental app for this station. More information on this iOS feature can be found here . Please use iOS Universal Links (https://developer.apple.com/ios/universal-links/) if possible so viewing apps don\u2019t need to manually manage the redirect of the user to the app store if the user doesn\u2019t have the application installed. This URI SHOULD be a deep link specific to this station, and SHOULD NOT be a general rental page that includes information for more than one station. The deep link SHOULD take users directly to this station, without any prompts, interstitial pages, or logins. Make sure that users can see this station even if they never previously opened the application. If this field is empty, it means deep linking isn\u2019t supported in the native iOS rental app. Note that the URI does not necessarily include the station_id - other identifiers can be used by the rental app within the URL to uniquely identify this station. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. iOS Universal Links example value: https://www.abc.com/app?sid=1234567890&platform=ios Deep Link (without Universal Links) example value: com.abcrental.ios://open.abc.app/app?sid=1234567890 \u2003- web (added in v1.1) OPTIONAL URL URL that can be used by a web browser to show more information about renting a vehicle at this station. This URL SHOULD be a deep link specific to this station, and SHOULD NOT be a general rental page that includes information for more than one station. The deep link SHOULD take users directly to this station, without any prompts, interstitial pages, or logins. Make sure that users can see this station even if they never previously opened the application. If this field is empty, it means deep linking isn\u2019t supported for web browsers. Example value: https://www.abc.com/app?sid=1234567890 Example 1: Physical station { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" : { \"stations\" : [ { \"station_id\" : \"pga\" , \"name\" : \"Parking garage A\" , \"lat\" : 12.345678 , \"lon\" : 45.678901 , \"vehicle_type_capacity\" : { \"abc123\" : 7 , \"def456\" : 9 } } ] } } Example 2: Virtual station { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" :{ \"stations\" :[ { \"station_id\" : \"station12\" , \"station_name\" : \"SE Belmont & SE 10 th \" , \"is_valet_station\" : false , \"is_virtual_station\" : true , \"station_area\" :{ \"type\" : \"MultiPolygon\" , \"coordinates\" :[ [ [ [ -122.655775 , 45.516445 ], [ -122.655705 , 45.516445 ], [ -122.655705 , 45.516495 ], [ -122.655775 , 45.516495 ], [ -122.655775 , 45.516445 ] ] ] ] }, \"capacity\" : 16 , \"vehicle_capacity\" :{ \"abc123\" : 8 , \"def456\" : 8 , \"ghi789\" : 16 } } ] } } station_status.json \u00b6 Describes the capacity and rental availability of a station. Data returned SHOULD be as close to realtime as possible, but in no case should it be more than 5 minutes out-of-date. See Data Latency . Data reflects the operator's most recent knowledge of the station\u2019s status. Any station that is represented in station_status.json MUST have a corresponding entry in station_information.json . Field Name REQUIRED Type Defines stations Yes Array Array that contains one object per station in the system as defined below. - station_id Yes ID Identifier of a station see station_information.json . - num_bikes_available Yes Non-negative integer Number of functional vehicles physically at the station that may be offered for rental. To know if the vehicles are available for rental, see is_renting . If is_renting = true this is the number of vehicles that are currently available for rent. If is_renting = false this is the number of vehicles that would be available for rent if the station were set to allow rentals. - vehicle_types_available (added in v2.1) Conditionally REQUIRED Array This field is REQUIRED if the vehicle_types.json file has been defined. This field's value is an array of objects. Each of these objects is used to model the total number of each defined vehicle type available at a station. The total number of vehicles from each of these objects SHOULD add up to match the value specified in the num_bikes_available field. \u2003- vehicle_type_id (added in v2.1) Yes ID The vehicle_type_id of each vehicle type at the station as described in vehicle_types.json . This field is REQUIRED if the vehicle_types.json is defined. \u2003- count (added in v2.1) Yes Non-negative integer A number representing the total number of available vehicles of the corresponding vehicle_type_id as defined in vehicle_types.json at the station. - num_bikes_disabled OPTIONAL Non-negative integer Number of disabled vehicles of any type at the station. Vendors who do not want to publicize the number of disabled vehicles or docks in their system can opt to omit station capacity (in station_information.json , num_bikes_disabled , and num_docks_disabled (as of v2.0) . If station capacity is published, then broken docks/vehicles can be inferred (though not specifically whether the decreased capacity is a broken vehicle or dock). - num_docks_available Conditionally REQUIRED (as of v2.0) Non-negative integer REQUIRED except for stations that have unlimited docking capacity (e.g. virtual stations) (as of v2.0) . Number of functional docks physically at the station that are able to accept vehicles for return. To know if the docks are accepting vehicle returns, see is_returning . If is_returning = true this is the number of docks that are currently available to accept vehicle returns. If is_returning = false this is the number of docks that would be available if the station were set to allow returns. - vehicle_docks_available (added in v2.1) Conditionally REQUIRED Array This field is REQUIRED in feeds where the vehicle_types.json is defined and where certain docks are only able to accept certain vehicle types. If every dock at the station is able to accept any vehicle type, then this field is not REQUIRED. This field's value is an array of objects. Each of these objects is used to model the number of docks available for certain vehicle types. The total number of docks from each of these objects SHOULD add up to match the value specified in the num_docks_available field. \u2003- vehicle_type_ids (added in v2.1) Yes Array An array of strings where each string represents a vehicle_type_id that is able to use a particular type of dock at the station \u2003- count (added in v2.1) Yes Non-negative integer A number representing the total number of available vehicles of the corresponding vehicle type as defined in the vehicle_types array at the station that can accept vehicles of the specified types in the vehicle_types array. - num_docks_disabled OPTIONAL Non-negative integer Number of disabled dock points at the station. - is_installed Yes Boolean Is the station currently on the street? true - Station is installed on the street. false - Station is not installed on the street. Boolean SHOULD be set to true when equipment is present on the street. In seasonal systems where equipment is removed during winter, boolean SHOULD be set to false during the off season. May also be set to false to indicate planned (future) stations which have not yet been installed. - is_renting Yes Boolean Is the station currently renting vehicles? true - Station is renting vehicles. Even if the station is empty, if it would otherwise allow rentals, this value MUST be true . false - Station is not renting vehicles. If the station is temporarily taken out of service and not allowing rentals, this field MUST be set to false . If a station becomes inaccessible to users due to road construction or other factors this field SHOULD be set to false . Field SHOULD be set to false during hours or days when the system is not offering vehicles for rent. - is_returning Yes Boolean Is the station accepting vehicle returns? true - Station is accepting vehicle returns. Even if the station is full, if it would otherwise allow vehicle returns, this value MUST be true . false - Station is not accepting vehicle returns. If the station is temporarily taken out of service and not allowing vehicle returns, this field MUST be set to false . If a station becomes inaccessible to users due to road construction or other factors, this field SHOULD be set to false . - last_reported Yes Timestamp The last time this station reported its status to the operator's backend. Example: { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" : { \"stations\" : [ { \"station_id\" : \"station 1\" , \"is_installed\" : true , \"is_renting\" : true , \"is_returning\" : true , \"last_reported\" : 1609866125 , \"num_docks_available\" : 3 , \"vehicle_docks_available\" : [{ \"vehicle_type_ids\" : [ \"abc123\" ], \"count\" : 2 }, { \"vehicle_type_ids\" : [ \"def456\" ], \"count\" : 1 }], \"num_bikes_available\" : 1 , \"vehicle_types_available\" : [{ \"vehicle_type_id\" : \"abc123\" , \"count\" : 1 }, { \"vehicle_type_id\" : \"def456\" , \"count\" : 0 }] }, { \"station_id\" : \"station 2\" , \"is_installed\" : true , \"is_renting\" : true , \"is_returning\" : true , \"last_reported\" : 1609866106 , \"num_docks_available\" : 8 , \"vehicle_docks_available\" : [{ \"vehicle_type_ids\" : [ \"abc123\" ], \"count\" : 6 }, { \"vehicle_type_ids\" : [ \"def456\" ], \"count\" : 2 }], \"num_bikes_available\" : 6 , \"vehicle_types_available\" : [{ \"vehicle_type_id\" : \"abc123\" , \"count\" : 2 }, { \"vehicle_type_id\" : \"def456\" , \"count\" : 4 }] } ] } } free_bike_status.json \u00b6 (as of v2.1) Describes all vehicles that are not currently in active rental. REQUIRED for free floating (dockless) vehicles. OPTIONAL for station based (docked) vehicles. Data returned SHOULD be as close to realtime as possible, but in no case should it be more than 5 minutes out-of-date. See Data Latency . Vehicles that are part of an active rental MUST NOT appear in this feed. Vehicles listed as available for rental MUST be in the field and accessible to users. Vehicles that are not accessible (e.g. in a warehouse or in transit) MUST NOT appear as available for rental. Field Name REQUIRED Type Defines bikes Yes Array Array that contains one object per vehicle that is currently stopped as defined below. - bike_id Yes ID Identifier of a vehicle. The bike_id identifier MUST be rotated to a random string after each trip to protect user privacy (as of v2.0) . Use of persistent vehicle IDs poses a threat to user privacy. The bike_id identifier SHOULD only be rotated once per trip. - lat Conditionally REQUIRED (as of v2.1) Latitude Latitude of the vehicle in decimal degrees. (as of v2.1) This field is REQUIRED if station_id is not provided for this vehicle (free floating). This field SHOULD have a precision of 6 decimal places (0.000001). See Coordinate Precision . - lon Conditionally REQUIRED (as of v2.1) Longitude Longitude of the vehicle. (as of v2.1) This field is REQUIRED if station_id is not provided for this vehicle (free floating). - is_reserved Yes Boolean Is the vehicle currently reserved? true - Vehicle is currently reserved. false - Vehicle is not currently reserved. - is_disabled Yes Boolean Is the vehicle currently disabled? true - Vehicle is currently disabled. false - Vehicle is not currently disabled. This field is used to indicate vehicles that are in the field but not available for rental. This may be due to a mechanical issue, low battery etc. Publishing this data may prevent users from attempting to rent vehicles that are disabled and not available for rental. - rental_uris (added in v1.1) OPTIONAL Object JSON object that contains rental URIs for Android, iOS, and web in the android, ios, and web fields. See examples of how to use these fields and supported analytics . \u2003- android (added in v1.1) OPTIONAL URI URI that can be passed to an Android app with an android.intent.action.VIEW Android intent to support Android Deep Links (https://developer.android.com/training/app-links/deep-linking). Please use Android App Links (https://developer.android.com/training/app-links) if possible, so viewing apps do not need to manually manage the redirect of the user to the app store if the user does not have the application installed. This URI SHOULD be a deep link specific to this vehicle, and SHOULD NOT be a general rental page that includes information for more than one vehicle. The deep link SHOULD take users directly to this vehicle, without any prompts, interstitial pages, or logins. Make sure that users can see this vehicle even if they never previously opened the application. Note that as a best practice providers SHOULD rotate identifiers within deep links after each rental to avoid unintentionally exposing private vehicle trip origins and destinations. If this field is empty, it means deep linking is not supported in the native Android rental app. Note that URIs do not necessarily include the bike_id for this vehicle - other identifiers can be used by the rental app within the URI to uniquely identify this vehicle. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. Android App Links example value: https://www.abc.com/app?sid=1234567890&platform=android Deep Link (without App Links) example value: com.abcrental.android://open.abc.app/app?sid=1234567890 \u2003- ios (added in v1.1) OPTIONAL URI URI that can be used on iOS to launch the rental app for this vehicle. More information on this iOS feature can be found here . Please use iOS Universal Links (https://developer.apple.com/ios/universal-links/) if possible, so viewing apps do not need to manually manage the redirect of the user to the app store if the user does not have the application installed. This URI SHOULD be a deep link specific to this vehicle, and SHOULD NOT be a general rental page that includes information for more than one vehicle. The deep link SHOULD take users directly to this vehicle, without any prompts, interstitial pages, or logins. Make sure that users can see this vehicle even if they never previously opened the application. Note that as a best practice providers SHOULD rotate identifiers within deep links after each rental to avoid unintentionally exposing private vehicle trip origins and destinations. If this field is empty, it means deep linking is not supported in the native iOS rental app. Note that the URI does not necessarily include the bike_id - other identifiers can be used by the rental app within the URL to uniquely identify this vehicle. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. iOS Universal Links example value: https://www.abc.com/app?sid=1234567890&platform=ios Deep Link (without Universal Links) example value: com.abcrental.ios://open.abc.app/app?sid=1234567890 \u2003- web (added in v1.1) OPTIONAL URL URL that can be used by a web browser to show more information about renting a vehicle at this vehicle. This URL SHOULD be a deep link specific to this vehicle, and SHOULD NOT be a general rental page that includes information for more than one vehicle. The deep link SHOULD take users directly to this vehicle, without any prompts, interstitial pages, or logins. Make sure that users can see this vehicle even if they never previously opened the application. Note that as a best practice providers SHOULD rotate identifiers within deep links after each rental to avoid unintentionally exposing private vehicle trip origins and destinations. If this field is empty, it means deep linking isn\u2019t supported for web browsers. Example value: https://www.abc.com/app?sid=1234567890 - vehicle_type_id (added in v2.1) Conditionally REQUIRED ID The vehicle_type_id of this vehicle as described in vehicle_types.json . This field is REQUIRED if the vehicle_types.json is defined. - last_reported (added in v2.1) OPTIONAL Timestamp The last time this vehicle reported its status to the operator's backend. - current_range_meters (added in v2.1) Conditionally REQUIRED Non-negative float If the corresponding vehicle_type definition for this vehicle has a motor, then this field is REQUIRED. This value represents the furthest distance in meters that the vehicle can travel without recharging or refueling with the vehicle's current charge or fuel. - station_id (added in v2.1) Conditionally REQUIRED ID Identifier referencing the station_id field in system_information.json . REQUIRED only if the vehicle is currently at a station and the vehicle_types.json file has been defined. - pricing_plan_id (added in v2.1) OPTIONAL ID The plan_id of the pricing plan this vehicle is eligible for as described in system_pricing_plans.json . Example: { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" :{ \"bikes\" :[ { \"bike_id\" : \"ghi789\" , \"last_reported\" : 1609866109 , \"lat\" : 12.34 , \"lon\" : 56.78 , \"is_reserved\" : false , \"is_disabled\" : false , \"vehicle_type_id\" : \"abc123\" }, { \"bike_id\" : \"jkl012\" , \"last_reported\" : 1609866204 , \"is_reserved\" : false , \"is_disabled\" : false , \"vehicle_type_id\" : \"def456\" , \"current_range_meters\" : 6543 , \"station_id\" : 86 , \"pricing_plan_id\" : \"plan3\" } ] } } system_hours.json \u00b6 This OPTIONAL file is used to describe hours and days of operation when vehicles are available for rental. If system_hours.json is not published, it indicates that vehicles are available for rental 24 hours a day, 7 days a week. Field Name REQUIRED Type Defines rental_hours Yes Array Array of objects as defined below. The array MUST contain a minimum of one object identifying hours for every day of the week or a maximum of two for each day of the week objects ( one for each user type). - user_types Yes Array An array of member and/or nonmember value(s). This indicates that this set of rental hours applies to either members or non-members only. - days Yes Array An array of abbreviations (first 3 letters) of English names of the days of the week for which this object applies (e.g. [\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat, \"sun\"] ). Rental hours MUST NOT be defined more than once for each day and user type. - start_time Yes Time Start time for the hours of operation of the system in the time zone indicated in system_information.json . - end_time Yes Time End time for the hours of operation of the system in the time zone indicated in system_information.json . Example: { \"last_updated\" : 1609866247 , \"ttl\" : 86400 , \"version\" : \"2.2\" , \"data\" : { \"rental_hours\" : [ { \"user_types\" : [ \"member\" ], \"days\" : [ \"sat\" , \"sun\" ], \"start_time\" : \"00:00:00\" , \"end_time\" : \"23:59:59\" }, { \"user_types\" : [ \"nonmember\" ], \"days\" : [ \"sat\" , \"sun\" ], \"start_time\" : \"05:00:00\" , \"end_time\" : \"23:59:59\" }, { \"user_types\" : [ \"member\" , \"nonmember\" ], \"days\" : [ \"mon\" , \"tue\" , \"wed\" , \"thu\" , \"fri\" ], \"start_time\" : \"00:00:00\" , \"end_time\" : \"23:59:59\" } ] } } system_calendar.json \u00b6 Describes the operating calendar for a system. This OPTIONAL file SHOULD be published by systems that operate seasonally or do not offer continuous year-round service. Field Name REQUIRED Type Defines calendars Yes Array Array of objects describing the system operational calendar. A minimum of one calendar object is REQUIRED. If start and end dates are the same every year, then start_year and end_year SHOULD be omitted. - start_month Yes Non-negative Integer Starting month for the system operations ( 1 - 12 ). - start_day Yes Non-negative Integer Starting date for the system operations ( 1 - 31 ). - start_year OPTIONAL Non-negative Integer Starting year for the system operations. - end_month Yes Non-negative Integer Ending month for the system operations ( 1 - 12 ). - end_day Yes Non-negative Integer Ending date for the system operations ( 1 - 31 ). - end_year OPTIONAL Non-negative Integer Ending year for the system operations. Example: { \"last_updated\" : 1604333830 , \"ttl\" : 86400 , \"version\" : \"2.2\" , \"data\" :{ \"calendars\" :[ { \"start_month\" : 4 , \"start_day\" : 1 , \"start_year\" : 2020 , \"end_month\" : 11 , \"end_day\" : 5 , \"end_year\" : 2020 } ] } } system_regions.json \u00b6 Describe regions for a system that is broken up by geographic or political region. Field Name REQUIRED Type Defines regions Yes Array Array of objects as defined below. - region_id Yes ID Identifier for the region. - name Yes String Public name for this region. Example: { \"last_updated\" : 1604332380 , \"ttl\" : 86400 , \"version\" : \"2.2\" , \"data\" :{ \"regions\" :[ { \"name\" : \"North\" , \"region_id\" : \"3\" }, { \"name\" : \"East\" , \"region_id\" : \"4\" }, { \"name\" : \"South\" , \"region_id\" : \"5\" }, { \"name\" : \"West\" , \"region_id\" : \"6\" } ] } } system_pricing_plans.json \u00b6 Describes pricing for the system. Field Name REQUIRED Type Defines plans Yes Array Array of objects as defined below. - plan_id Yes ID Identifier for a pricing plan in the system. - url OPTIONAL URL URL where the customer can learn more about this pricing plan. - name Yes String Name of this pricing plan. - currency Yes String Currency used to pay the fare. This pricing is in ISO 4217 code: http://en.wikipedia.org/wiki/ISO_4217 (e.g. CAD for Canadian dollars, EUR for euros, or JPY for Japanese yen.) - price Yes Non-Negative float OR String Fare price, in the unit specified by currency. If string, MUST be in decimal monetary value. (added in v2.2) Note: v3.0 may only allow non-negative float, therefore future implementations SHOULD be non-negative float. In case of non-rate price, this field is the total price. In case of rate price, this field is the base price that is charged only once per trip (e.g., price for unlocking) in addition to per_km_pricing and/or per_min_pricing . - is_taxable Yes Boolean Will additional tax be added to the base price? true - Yes. false - No. false MAY be used to indicate that tax is not charged or that tax is included in the base price. - description Yes String Customer-readable description of the pricing plan. This SHOULD include the duration, price, conditions, etc. that the publisher would like users to see. - per_km_pricing (added in v2.2) OPTIONAL Array Array of segments when the price is a function of distance travelled, displayed in kilometers. Total price is the addition of price and all segments in per_km_pricing and per_min_pricing . If this array is not provided, there are no variable prices based on distance. \u2003\u2003- start (added in v2.2) Yes Non-Negative Integer The kilometer at which this segment rate starts being charged (inclusive) . \u2003\u2003- rate (added in v2.2) Yes Float Rate that is charged for each kilometer interval after the start . Can be a negative number, which indicates that the traveller will receive a discount. \u2003\u2003- interval (added in v2.2) Yes Non-Negative Integer Interval in kilometers at which the rate of this segment is either reapplied indefinitely, or if defined, up until (but not including) end kilometer. An interval of 0 indicates the rate is only charged once. \u2003\u2003- end (added in v2.2) OPTIONAL Non-Negative Integer The kilometer at which the rate will no longer apply (exclusive) e.g. if end is 20 the rate no longer applies at 20.00 km. If this field is empty, the price issued for this segment is charged until the trip ends, in addition to following segments. - per_min_pricing (added in v2.2) OPTIONAL Array Array of segments when the price is a function of time travelled, displayed in minutes. Total price is the addition of price and all segments in per_km_pricing and per_min_pricing . If this array is not provided, there are no variable prices based on time. \u2003\u2003- start (added in v2.2) Yes Non-Negative Integer The minute at which this segment rate starts being charged (inclusive) . \u2003\u2003- rate (added in v2.2) Yes Float Rate that is charged for each minute interval after the start . Can be a negative number, which indicates that the traveller will receive a discount. \u2003\u2003- interval (added in v2.2) Yes Non-Negative Integer Interval in minutes at which the rate of this segment is either reapplied indefinitely, or if defined, up until (but not including) end minute. An interval of 0 indicates the rate is only charged once. \u2003\u2003- end (added in v2.2) OPTIONAL Non-Negative Integer The minute at which the rate will no longer apply (exclusive) e.g. if end is 20 the rate no longer applies after 19:59. If this field is empty, the price issued for this segment is charged until the trip ends, in addition to following segments. - surge_pricing (added in v2.2) OPTIONAL Boolean Is there currently an increase in price in response to increased demand in this pricing plan? If this field is empty, it means these is no surge pricing in effect. true - Surge pricing is in effect. false - Surge pricing is not in effect. Examples (added in v2.2) \u00b6 Example 1: The user does not pay more than the base price for the first 10 km. After 10 km the user pays $1 per km. After 25 km the user pays $0.50 per km and an additional $3 every 5 km, the extension price, in addition to $0.50 per km. { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" : { \"plans\" : [ { \"plan_id\" : \"plan2\" , \"name\" : \"One-Way\" , \"currency\" : \"USD\" , \"price\" : 2 , \"is_taxable\" : false , \"description\" : \"Includes 10km, overage fees apply after 10km.\" , \"per_km_pricing\" : [ { \"start\" : 10 , \"rate\" : 1 , \"interval\" : 1 , \"end\" : 25 }, { \"start\" : 25 , \"rate\" : 0.5 , \"interval\" : 1 }, { \"start\" : 25 , \"rate\" : 3 , \"interval\" : 5 } ] } ] } } Example 2: This example demonstrates a pricing scheme that has a rate both by minute and by km. The user is charged $0.25 per km as well as $0.50 per minute. Both of these rates happen concurrently and are not dependent on one another. { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" : { \"plans\" : [ { \"plan_id\" : \"plan3\" , \"name\" : \"Simple Rate\" , \"currency\" : \"CAD\" , \"price\" : 3 , \"is_taxable\" : true , \"description\" : \"$3 unlock fee, $0.25 per kilometer and 0.50 per minute.\" , \"per_km_pricing\" : [ { \"start\" : 0 , \"rate\" : 0.25 , \"interval\" : 1 } ], \"per_min_pricing\" : [ { \"start\" : 0 , \"rate\" : 0.50 , \"interval\" : 1 } ] } ] } } system_alerts.json \u00b6 This feed is intended to inform customers about changes to the system that do not fall within the normal system operations. For example, system closures due to weather would be listed here, but a system that only operated for part of the year would have that schedule listed in the system_calendar.json feed. Obsolete alerts SHOULD be removed so the client application can safely present to the end user everything present in the feed. Field Name REQUIRED Type Defines alerts Yes Array Array of objects each indicating a system alert as defined below. - alert_id Yes ID Identifier for this alert. - type Yes Enum Valid values are: system_closure station_closure station_move other - times OPTIONAL Array Array of objects with the fields start and end indicating when the alert is in effect (e.g. when the system or station is actually closed, or when it is scheduled to be moved). \u2003- start Yes Timestamp Start time of the alert. \u2003- end OPTIONAL Timestamp End time of the alert. If there is currently no end time planned for the alert, this can be omitted. - station_ids OPTIONAL Array If this is an alert that affects one or more stations, include their ID(s). Otherwise omit this field. If both station_id and region_id are omitted, this alert affects the entire system. - region_ids OPTIONAL Array If this system has regions, and if this alert only affects certain regions, include their ID(s). Otherwise, omit this field. If both station_id s and region_id s are omitted, this alert affects the entire system. - url OPTIONAL URL URL where the customer can learn more information about this alert. - summary Yes String A short summary of this alert to be displayed to the customer. - description OPTIONAL String Detailed description of the alert. - last_updated OPTIONAL Timestamp Indicates the last time the info for the alert was updated. Example: { \"last_updated\" : 1604198100 , \"ttl\" : 60 , \"version\" : \"2.2\" , \"data\" :{ \"alerts\" :[ { \"alert_id\" : \"21\" , \"type\" : \"station_closure\" , \"station_ids\" :[ \"123\" , \"456\" , \"789\" ], \"times\" :[ { \"start\" : \"1604448000\" , \"end\" : \"1604674800\" } ], \"url\" : \"https://example.com/more-info\" , \"summary\" : \"Disruption of Service\" , \"description\" : \"The three stations on Broadway will be out of service from 12:00am Nov 3 to 3:00pm Nov 6th to accommodate road work\" , \"last_updated\" : 1604519393 } ] } } geofencing_zones.json (added in v2.1) \u00b6 Describes geofencing zones and their associated rules and attributes. Geofenced areas are delineated using GeoJSON in accordance with RFC 7946 . By default, no restrictions apply everywhere. Geofencing zones SHOULD be modeled according to restrictions rather than allowance. An operational area (outside of which vehicles cannot be used) SHOULD be defined with a counterclockwise polygon, and a limitation area (in which vehicles can be used under certain restrictions) SHOULD be defined with a clockwise polygon. Geofences and GPS operate in two dimensions. Restrictions placed on an overpass or bridge will also be applied to the roadway or path beneath. Care SHOULD be taken when developing geofence based policies that rely on location data. Location data from GPS, cellular and Wi-Fi signals are subject to interference resulting in accuracy levels in the tens of meters or greater. This may result in vehicles being placed within a geofenced zone when they are actually outside or adjacent to the zone. Transit time between server and client can also impact when a user is notified of a geofence based policy. A vehicle traveling at 15kph can be well inside of a restricted zone before a notification is received. Field Name REQUIRED Type Defines geofencing_zones Yes GeoJSON FeatureCollection Each geofenced zone and its associated rules and attributes is described as an object within the array of features, as follows. - type Yes String \u201cFeatureCollection\u201d (as per IETF RFC 7946 ). - features Yes Array Array of objects as defined below. \u2003- type Yes String \u201cFeature\u201d (as per IETF RFC 7946 ). \u2003- geometry Yes GeoJSON Multipolygon A polygon that describes where rides might not be able to start, end, go through, or have other limitations. A clockwise arrangement of points defines the area enclosed by the polygon, while a counterclockwise order defines the area outside the polygon ( right-hand rule ). All geofencing zones contained in this list are public (i.e., can be shown on a map for public use). \u2003- properties Yes Object Properties: As defined below, describing travel allowances and limitations. \u2003\u2003- name OPTIONAL String Public name of the geofencing zone. \u2003\u2003- start OPTIONAL Timestamp Start time of the geofencing zone. If the geofencing zone is always active, this can be omitted. \u2003\u2003- end OPTIONAL Timestamp End time of the geofencing zone. If the geofencing zone is always active, this can be omitted. \u2003\u2003- rules OPTIONAL Array Array that contains one object per rule as defined below. In the event of colliding rules within the same polygon, the earlier rule (in order of the JSON file) takes precedence. In the case of overlapping polygons, the combined set of rules associated with the overlapping polygons applies to the union of the polygons. In the event of colliding rules in this set, the earlier rule (in order of the JSON file) also takes precedence. \u2003\u2003\u2003- vehicle_type_id OPTIONAL Array Array of IDs of vehicle types for which any restrictions SHOULD be applied (see vehicle type definitions in PR #136 ). If vehicle_type_ids are not specified, then restrictions apply to all vehicle types. \u2003\u2003\u2003- ride_allowed Conditionally REQUIRED Boolean REQUIRED if rules array is defined. Is the undocked (\u201cfree bike\u201d) ride allowed to start and end in this zone? true - Undocked (\u201cfree bike\u201d) ride can start and end in this zone. false - Undocked (\u201cfree bike\u201d) ride cannot start and end in this zone. \u2003\u2003\u2003- ride_through_allowed Conditionally REQUIRED Boolean REQUIRED if rules array is defined. Is the ride allowed to travel through this zone? true - Ride can travel through this zone. false - Ride cannot travel through this zone. \u2003\u2003\u2003- maximum_speed_kph OPTIONAL Non-negative Integer What is the maximum speed allowed, in kilometers per hour? If there is no maximum speed to observe, this can be omitted. Example: { \"last_updated\" : 1604198100 , \"ttl\" : 60 , \"version\" : \"2.2\" , \"data\" :{ \"geofencing_zones\" :{ \"type\" : \"FeatureCollection\" , \"features\" :[ { \"type\" : \"Feature\" , \"geometry\" :{ \"type\" : \"MultiPolygon\" , \"coordinates\" :[ [ [ [ -122.578067 , 45.562982 ], [ -122.661838 , 45.562741 ], [ -122.661151 , 45.504542 ], [ -122.578926 , 45.5046625 ], [ -122.578067 , 45.562982 ] ] ], [ [ [ -122.650680 , 45.548197 ], [ -122.650852 , 45.534731 ], [ -122.630939 , 45.535212 ], [ -122.630424 , 45.548197 ], [ -122.650680 , 45.548197 ] ] ] ] }, \"properties\" :{ \"name\" : \"NE 24th/NE Knott\" , \"start\" : 1593878400 , \"end\" : 1593907260 , \"rules\" :[ { \"vehicle_type_id\" :[ \"moped1\" , \"car1\" ], \"ride_allowed\" : false , \"ride_through_allowed\" : true , \"maximum_speed_kph\" : 10 } ] } } ] } } } Deep Links (added in v1.1) \u00b6 Deep links to iOS, Android, and web apps are supported via URIs in the system_information.json , station_information.json , and free_bike_status.json files. The following sections describe how analytics can be added to these URIs, as well as some examples. For further examples, see \"What's New in GBFS\" . Analytics (added in v1.1) \u00b6 In all of the rental URI fields, a viewing app can report the origin of a deep link to request to a rental app by appending the client_id (added in v1.1) parameter to the URI along with the domain name for the viewing app. For example, if Google is the viewing app, it can append: client_id=google.com ...to the URI field to report that Google is the originator of the deep link request. If the Android URI is: com.abcrental.android://open.abc.app/stations?id=1234567890 ...then the URI used by Google would be: com.abcrental.android://open.abc.app/stations?id=1234567890&client_id=google.com Other supported parameters include: ad_id (added in v1.1) - Advertising ID issued to the viewing app (e.g., IFDA on iOS) token (added in v1.1) - A token identifier that was issued by the rental app to the viewing app. Examples (added in v1.1) \u00b6 Example 1 - App Links on Android and Universal Links on iOS are supported: system_information.json { \"last_updated\" : 1572447999 , \"ttl\" : 60 , \"version\" : \"2.2\" , \"data\" :{ \"system_id\" : \"abc_cityname\" , \"short_name\" : \"ABC Bike Rental\" , \"rental_apps\" :{ \"android\" :{ \"discovery_uri\" : \"com.abcrental.android://\" }, \"ios\" :{ \"discovery_uri\" : \"com.abcrental.ios://\" } } ... station_information.json { \"last_updated\" : 1609866247 , \"ttl\" : 60 , \"version\" : \"2.2\" , \"data\" :{ \"stations\" :[ { \"station_id\" : \"425\" , \"name\" : \"Coppertail\" , \"lat\" : 27.9563335328521 , \"lon\" : -82.430436084371 , \"rental_uris\" :{ \"android\" : \"https://www.abc.com/app?sid=1234567890&platform=android\" , \"ios\" : \"https://www.abc.com/app?sid=1234567890&platform=ios\" } }, ... Note that the Android URI and iOS Universal Link URLs don\u2019t necessarily use the same identifier as the station_id. Example 2 - App Links are not supported on Android and Universal Links are not supported on iOS, but deep links are still supported on Android and iOS: system_information.json { \"last_updated\" : 1572447999 , \"ttl\" : 60 , \"version\" : \"2.2\" , \"data\" : { \"system_id\" : \"abc_cityname\" , \"short_name\" : \"ABC Bike Rental\" , \"rental_apps\" : { \"android\" : { \"discovery_uri\" : \"com.abcrental.android://\" \"store_uri\" : \"https://play.google.com/store/apps/details?id=com.abcrental.android\" , }, \"ios\" : { \"store_uri\" : \"https://apps.apple.com/app/apple-store/id123456789\" , \"discovery_uri\" : \"com.abcrental.ios://\" } }, ... station_information.json { \"last_updated\" : 1609866247 , \"ttl\" : 60 , \"version\" : \"2.2\" , \"data\" :{ \"stations\" :[ { \"station_id\" : \"425\" , \"name\" : \"Coppertail\" , \"lat\" : 27.9563335328521 , \"lon\" : -82.430436084371 , \"rental_uris\" :{ \"android\" : \"com.abcrental.android://open.abc.app/app?sid=1234567890\" , \"ios\" : \"com.abcrental.ios://open.abc.app/app?sid=1234567890\" } }, ... Example 3 - Deep link web URLs are supported, but not Android or iOS native apps: station_information.json { \"last_updated\" : 1609866247 , \"ttl\" : 60 , \"version\" : \"2.2\" , \"data\" :{ \"stations\" :[ { \"station_id\" : \"425\" , \"name\" : \"Coppertail\" , \"lat\" : 27.9563335328521 , \"lon\" : -82.430436084371 , \"rental_uris\" :{ \"web\" : \"https://www.abc.com/app?sid=1234567890\" } }, ... Disclaimers \u00b6 Apple Pay, PayPass and other third-party product and service names are trademarks or registered trademarks of their respective owners. License \u00b6 Except as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 3.0 License .","title":"Reference"},{"location":"reference/#general-bikeshare-feed-specification-gbfs","text":"This document explains the types of files and data that comprise the General Bikeshare Feed Specification (GBFS) and defines the fields used in all of those files.","title":"General Bikeshare Feed Specification (GBFS)"},{"location":"reference/#reference-version","text":"This documentation refers to v2.2 . For past and upcoming versions see the README .","title":"Reference version"},{"location":"reference/#terminology","text":"The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 , BCP 14 and RFC8174 when, and only when, they appear in all capitals, as shown here.","title":"Terminology"},{"location":"reference/#table-of-contents","text":"Introduction Version Endpoints Term Definitions Files Accessibility File Requirements Licensing Field Types Files gbfs.json gbfs_versions.json (added in v1.1) system_information.json vehicle_types.json (added in v2.1) station_information.json station_status.json free_bike_status.json system_hours.json system_calendar.json system_regions.json system_pricing_plans.json system_alerts.json geofencing_zones.json (added in v2.1) Deep Links - Analytics and Examples (added in v1.1)","title":"Table of Contents"},{"location":"reference/#introduction","text":"This specification has been designed with the following concepts in mind: Provide the status of the system at this moment Do not provide information whose primary purpose is historical The specification supports real-time travel advice in GBFS-consuming applications.","title":"Introduction"},{"location":"reference/#version-endpoints","text":"The version of the GBFS specification to which a feed conforms is declared in the version field in all files. See Output Format . GBFS Best Practice defines that: GBFS producers SHOULD provide endpoints that conform to both the current specification long term support (LTS) branch as well as the latest release branch within at least 3 months of a new spec MAJOR or MINOR version release. It is not necessary to support more than one MINOR release of the same MAJOR release group because MINOR releases are backwards-compatible. See specification versioning GBFS consumers SHOULD, at a minimum, support the current LTS branch. It is highly RECOMMENDED that GBFS consumers support later releases. Default GBFS feed URLs, e.g. https://www.example.com/data/gbfs.json or https://www.example.com/data/fr/system_information.json MUST direct consumers to the feed that conforms to the current LTS documentation branch.","title":"Version Endpoints"},{"location":"reference/#term-definitions","text":"This section defines terms that are used throughout this document. JSON - (JavaScript Object Notation) is a lightweight format for storing and transporting data. This document uses many terms defined by the JSON standard, including field, array, and object. (https://www.w3schools.com/js/js_json_datatypes.asp) Field - In JSON, a name/value pair consists of a field name (in double quotes), followed by a colon, followed by a value. (https://www.w3schools.com/js/js_json_syntax.asp) GeoJSON - GeoJSON is a format for encoding a variety of geographic data structures. (https://geojson.org/) REQUIRED - The field MUST be included in the dataset, and a value MUST be provided in that field for each record. OPTIONAL - The field MAY be omitted from the dataset. If an OPTIONAL column is included, some of the entries in that field MAY be empty strings. An omitted field is equivalent to a field that is empty. Conditionally REQUIRED - The field or file is REQUIRED under certain conditions, which are outlined in the field or file description. Outside of these conditions, this field or file is OPTIONAL.","title":"Term Definitions"},{"location":"reference/#files","text":"File Name REQUIRED Defines gbfs.json Yes (as of v2.0) Auto-discovery file that links to all of the other files published by the system. gbfs_versions.json (added in v1.1) OPTIONAL Lists all feed endpoints published according to versions of the GBFS documentation. system_information.json Yes Details including system operator, system location, year implemented, URL, contact info, time zone. vehicle_types.json (added in v2.1) Conditionally REQUIRED Describes the types of vehicles that System operator has available for rent. REQUIRED of systems that include information about vehicle types in the free_bike_status file. If this file is not included, then all vehicles in the feed are assumed to be non-motorized bicycles. station_information.json Conditionally REQUIRED List of all stations, their capacities and locations. REQUIRED of systems utilizing docks. station_status.json Conditionally REQUIRED Number of available vehicles and docks at each station and station availability. REQUIRED of systems utilizing docks. free_bike_status.json Conditionally REQUIRED (as of v2.1) Describes all vehicles that are not currently in active rental. REQUIRED for free floating (dockless) vehicles. OPTIONAL for station based (docked) vehicles. Vehicles that are part of an active rental MUST NOT appear in this feed. system_hours.json OPTIONAL Hours of operation for the system. system_calendar.json OPTIONAL Dates of operation for the system. system_regions.json OPTIONAL Regions the system is broken up into. system_pricing_plans.json OPTIONAL System pricing scheme. system_alerts.json OPTIONAL Current system alerts. geofencing_zones.json (added in v2.1) OPTIONAL Geofencing zones and their associated rules and attributes.","title":"Files"},{"location":"reference/#accessibility","text":"Datasets SHOULD be published at an easily accessible, public, permanent URL. (e.g., www.agency.org/gbfs/v2-2/gbfs.json). The URL SHOULD be directly available without requiring login to access the file to facilitate download by consuming software applications. To be compliant with GBFS, all systems MUST have an entry in the systems.csv file.","title":"Accessibility"},{"location":"reference/#feed-availability","text":"Automated tools for application performance monitoring SHOULD be used to ensure feed availability. Producers SHOULD provide a technical contact who can respond to feed outages in the feed_contact_email field in the system_information.json file.","title":"Feed Availability"},{"location":"reference/#seasonal-shutdowns-disruptions-of-service","text":"Feeds SHOULD continue to be published during seasonal or temporary shutdowns. Feed URLs SHOULD NOT return a 404. An empty bikes array SHOULD be returned by free_bike_status.json . Stations in station_status.json SHOULD be set to is_renting:false , is_returning:false and is_installed:false where applicable. Seasonal shutdown dates SHOULD be reflected in system_calendar.json . Announcements for disruptions of service, including disabled stations or temporary closures of stations or systems SHOULD be made in system_alerts.json .","title":"Seasonal Shutdowns, Disruptions of Service"},{"location":"reference/#file-requirements","text":"All files SHOULD be valid JSON All files in the spec MAY be published at a URL path or with an alternate name (e.g., station_info instead of station_information.json ) (as of v2.0) . All data SHOULD be UTF-8 encoded Line breaks SHOULD be represented by unix newline characters only (\\n) Pagination is not supported.","title":"File Requirements"},{"location":"reference/#file-distribution","text":"Files are distributed as individual HTTP endpoints. REQUIRED files MUST NOT 404. They MUST return a properly formatted JSON file as defined in Output Format . OPTIONAL files MAY 404. A 404 of an OPTIONAL file SHOULD NOT be considered an error.","title":"File Distribution"},{"location":"reference/#auto-discovery","text":"Publishers SHOULD implement auto-discovery of GBFS feeds by linking to the location of the gbfs.json auto-discovery endpoint. * The location of the auto-discovery file SHOULD be provided in the HTML area of the shared mobility landing page hosted at the URL specified in the URL field of the system_infomation.json file. This is referenced via a link tag with the following format: <link rel=\"gbfs\" type=\"application/json\" href=\"https://www.example.com/data/gbfs.json\" /> References: http://microformats.org/wiki/existing-rel-values http://microformats.org/wiki/rel-faq#How_is_rel_used A shared mobility landing page MAY contain links to auto-discovery files for multiple systems.","title":"Auto-Discovery"},{"location":"reference/#localization","text":"Each set of data files SHOULD be distributed in a single language as defined in system_information.json. A system that wants to publish feeds in multiple languages SHOULD do so by publishing multiple distributions, such as: https://www.example.com/data/en/system_information.json https://www.example.com/data/fr/system_information.json","title":"Localization"},{"location":"reference/#text-fields-and-naming","text":"Rich text SHOULD NOT be stored in free form text fields. Fields SHOULD NOT contain HTML. All customer-facing text strings (including station names) SHOULD use Mixed Case (not ALL CAPS), following local conventions for capitalization of place names on displays capable of displaying lower case characters. Examples: Central Park South Villiers-sur-Marne Market Street Abbreviations SHOULD NOT be used for names and other text (e.g. St. for Street) unless a location is called by its abbreviated name (e.g. \u201cJFK Airport\u201d). Abbreviations may be problematic for accessibility by screen reader software and voice user interfaces. Consuming software can be engineered to reliably convert full words to abbreviations for display, but converting from abbreviations to full words is prone to more risk of error. Names used for stations, virtual stations and geofenced areas SHOULD be human readable. Naming conventions used for locations SHOULD consider a variety of use cases including both text and maps. Descriptions SHOULD NOT include information so specific that it could be used in tracking of vehicles or trips.","title":"Text Fields and Naming"},{"location":"reference/#coordinate-precision","text":"Feeds SHOULD provide 6 digits (0.000001) of precision for decimal degrees lat/lon coordinates. Decimal places Degrees Distance at the Equator 0 1.0 111 km 1 0.1 11.1 km 2 0.01 1.11 km 3 0.001 111 m 4 0.0001 11.1 m 5 0.00001 1.11 m 6 0.000001 0.11 m 7 0.0000001 1.11 cm","title":"Coordinate Precision"},{"location":"reference/#data-latency","text":"The data returned by the near-realtime endpoints station_status.json and free_bike_status.json SHOULD be as close to realtime as possible, but in no case should it be more than 5 minutes out-of-date. Appropriate values SHOULD be set using the ttl property for each endpoint based on how often the data in feeds are refreshed or updated. For near-realtime endpoints where the data should always be refreshed the ttl value SHOULD be 0 . The last_updated timestamp represents the publisher's knowledge of the current state of the system at this point in time. The last_reported timestamp represents the last time a station or vehicle reported its status to the operator's backend.","title":"Data Latency"},{"location":"reference/#licensing","text":"It is RECOMMENDED that all GBFS data sets be offered under an open data license. Open data licenses allow consumers to freely use, modify and share GBFS data for any purpose in perpetuity. Licensing of GBFS data provides certainty to GBFS consumers, allowing them to integrate GBFS data into their work. All GBFS data sets SHOULD specify a license using the license_id field with an SPDX identifier or by using the license_url field with a URL pointing to a custom license in system_information.json . See the GBFS repo for a comparison of a subset of standard licenses .","title":"Licensing"},{"location":"reference/#field-types","text":"Array - A JSON element consisting of an ordered sequence of zero or more values. Boolean - One of two possible values, true or false . Boolean values MUST be JSON booleans, not strings (i.e. true or false , not \"true\" or \"false\" ). (as of v2.0) Date - Service day in the YYYY-MM-DD format. Example: 2019-09-13 for September 13th, 2019. Email - An email address. Example: example@example.com Enum (Enumerable values) - An option from a set of predefined constants in the \"Defines\" column. Enum values SHOULD be lowercase. Example: The rental_methods field contains values creditcard , paypass , etc... Float (added in v2.1) - A 32-bit floating point number. GeoJSON FeatureCollection - A FeatureCollection as described by the IETF RFC 7946 https://tools.ietf.org/html/rfc7946#section-3.3. GeoJSON Multipolygon - A Geometry Object as described by the IETF RFC https://tools.ietf.org/html/rfc7946#section-3.1.7. ID - Should be represented as a string that identifies that particular entity. An ID: MUST be unique within like fields (e.g. station_id MUST be unique among stations) does not have to be globally unique, unless otherwise specified MUST NOT contain spaces MUST be persistent for a given entity (station, plan, etc). An exception is floating bike bike_id , which MUST NOT be persistent for privacy reasons (see free_bike_status.json ). (as of v2.0) Language - An IETF BCP 47 language code. For an introduction to IETF BCP 47, refer to http://www.rfc-editor.org/rfc/bcp/bcp47.txt and http://www.w3.org/International/articles/language-tags/. Examples: en for English, en-US for American English, or de for German. Latitude - WGS84 latitude in decimal degrees. The value MUST be greater than or equal to -90.0 and less than or equal to 90.0. Example: 41.890169 for the Colosseum in Rome. Longitude - WGS84 longitude in decimal degrees. The value MUST be greater than or equal to -180.0 and less than or equal to 180.0. Example: 12.492269 for the Colosseum in Rome. Non-negative Float - A 32-bit floating point number greater than or equal to 0. Non-negative Integer - An integer greater than or equal to 0. Object - A JSON element consisting of key-value pairs (fields). String - Can only contain text. Strings MUST NOT contain any formatting codes (including HTML) other than newlines. Time - Service time in the HH:MM:SS format for the time zone indicated in system_information.json (00:00:00 - 47:59:59). Time can stretch up to one additional day in the future to accommodate situations where, for example, a system was open from 11:30pm - 11pm the next day (i.e. 23:30:00-47:00:00). Timestamp - Timestamp fields MUST be represented as integers in POSIX time. (e.g., the number of seconds since January 1st 1970 00:00:00 UTC) Timezone - TZ timezone from the https://www.iana.org/time-zones. Timezone names never contain the space character but MAY contain an underscore. Refer to http://en.wikipedia.org/wiki/List_of_tz_zones for a list of valid values. Example: Asia/Tokyo , America/Los_Angeles or Africa/Cairo . URI (added in v1.1) - A fully qualified URI that includes the scheme (e.g., com.abcrental.android:// ), and any special characters in the URI MUST be correctly escaped. See the following http://www.w3.org/Addressing/URL/4_URI_Recommentations.html for a description of how to create fully qualified URI values. Note that URIs MAY be URLs. URL - A fully qualified URL that includes http:// or https:// , and any special characters in the URL MUST be correctly escaped. See the following http://www.w3.org/Addressing/URL/4_URI_Recommentations.html for a description of how to create fully qualified URL values.","title":"Field Types"},{"location":"reference/#extensions-outside-of-the-specification","text":"To accommodate the needs of feed producers and consumers prior to the adoption of a change, additional fields can be added to feeds even if these fields are not part of the official specification. Custom extensions that may provide value to the GBFS community and align with the GBFS Guiding Principles SHOULD be proposed for inclusion in the specification through the change process. Field names of extensions SHOULD be prefixed with an underscore ( _) character. It is strongly RECOMMENDED that these additional fields be documented on the wiki page of the GBFS repository in this format: Submitted by Field Name File Name Defines Publisher's name _field_name Name of GBFS endpoint where field is used Description of purpose of use","title":"Extensions Outside of the Specification"},{"location":"reference/#json-files","text":"","title":"JSON Files"},{"location":"reference/#output-format","text":"Every JSON file presented in this specification contains the same common header information at the top level of the JSON response object: Field Name REQUIRED Type Defines last_updated Yes Timestamp Indicates the last time data in the feed was updated. This timestamp represents the publisher's knowledge of the current state of the system at this point in time. ttl Yes Non-negative integer Number of seconds before the data in the feed will be updated again (0 if the data should always be refreshed). version (added in v1.1) Yes String GBFS version number to which the feed confirms, according to the versioning framework. data Yes Object Response data in the form of name:value pairs. Example: { \"last_updated\" : 1609866247 , \"ttl\" : 3600 , \"version\" : \"2.2\" , \"data\" : { \"name\" : \"Citi Bike\" , \"system_id\" : \"citibike_com\" } }","title":"Output Format"},{"location":"reference/#gbfsjson","text":"The gbfs.json discovery file SHOULD represent a single system or geographic area in which vehicles are operated. The location (URL) of the gbfs.json file SHOULD be made available to the public using the specification\u2019s auto-discovery function. Field Name REQUIRED Type Defines language Yes Language The language that will be used throughout the rest of the files. It MUST match the value in the system_information.json file. - feeds Yes Array An array of all of the feeds that are published by this auto-discovery file. Each element in the array is an object with the keys below. \u2003- name Yes String Key identifying the type of feed this is. The key MUST be the base file name defined in the spec for the corresponding feed type ( system_information for system_information.json file, station_information for station_information.json file). \u2003- url Yes URL URL for the feed. Note that the actual feed endpoints (urls) MAY NOT be defined in the file_name.json format. For example, a valid feed endpoint could end with station_info instead of station_information.json . Example: { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" : { \"en\" : { \"feeds\" : [ { \"name\" : \"system_information\" , \"url\" : \"https://www.example.com/gbfs/1/en/system_information\" }, { \"name\" : \"station_information\" , \"url\" : \"https://www.example.com/gbfs/1/en/station_information\" } ] }, \"fr\" : { \"feeds\" : [ { \"name\" : \"system_information\" , \"url\" : \"https://www.example.com/gbfs/1/fr/system_information\" }, { \"name\" : \"station_information\" , \"url\" : \"https://www.example.com/gbfs/1/fr/station_information\" } ] } } }","title":"gbfs.json"},{"location":"reference/#gbfs_versionsjson-added-in-v11","text":"Each expression of a GBFS feed describes all of the versions that are available. The following fields are all attributes within the main \"data\" object for this feed. Field Name REQUIRED Type Defines versions Yes Array Contains one object, as defined below, for each of the available versions of a feed. The array MUST be sorted by increasing MAJOR and MINOR version number. - version Yes String The semantic version of the feed in the form X.Y . - url Yes URL URL of the corresponding gbfs.json endpoint. Example: { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" : { \"versions\" : [ { \"version\" : \"2.0\" , \"url\" : \"https://www.example.com/gbfs/2/gbfs\" }, { \"version\" : \"2.2\" , \"url\" : \"https://www.example.com/gbfs/2-2/gbfs\" } ] } }","title":"gbfs_versions.json (added in v1.1)"},{"location":"reference/#system_informationjson","text":"The following fields are all attributes within the main \"data\" object for this feed. Field Name REQUIRED Type Defines system_id Yes ID This is a globally unique identifier for the vehicle share system. It is up to the publisher of the feed to guarantee uniqueness and MUST be checked against existing system_id fields in systems.txt to ensure this. This value is intended to remain the same over the life of the system. Each distinct system or geographic area in which vehicles are operated SHOULD have its own system_id . Systems IDs SHOULD be recognizable as belonging to a particular system as opposed to random strings - for example, bcycle_austin or biketown_pdx . language Yes Language The language that will be used throughout the rest of the files. It MUST match the value in the gbfs.json file. name Yes String Name of the system to be displayed to customers. short_name OPTIONAL String OPTIONAL abbreviation for a system. operator OPTIONAL String Name of the system operator. url OPTIONAL URL The URL of the vehicle share system. purchase_url OPTIONAL URL URL where a customer can purchase a membership. start_date OPTIONAL Date Date that the system began operations. phone_number OPTIONAL Phone Number This OPTIONAL field SHOULD contain a single voice telephone number for the specified system\u2019s customer service department. It can and SHOULD contain punctuation marks to group the digits of the number. Dialable text (for example, Capital Bikeshare\u2019s \"877-430-BIKE\") is permitted, but the field MUST NOT contain any other descriptive text. email OPTIONAL Email This OPTIONAL field SHOULD contain a single contact email address actively monitored by the operator\u2019s customer service department. This email address SHOULD be a direct contact point where riders can reach a customer service representative. feed_contact_email (added in v1.1) OPTIONAL Email This OPTIONAL field SHOULD contain a single contact email for feed consumers to report technical issues with the feed. timezone Yes Timezone The time zone where the system is located. license_url Conditionally REQUIRED (as of v3.0-RC) URL REQUIRED if the dataset is provided under a customized license. A fully qualified URL of a page that defines the license terms for the GBFS data for this system. Do not specify a license_url if license_id is specified. If the license_id and license_url fields are blank or omitted, this indicates that the feed is provided under the Creative Commons Universal Public Domain Dedication . (as of v3.0-RC) rental_apps (added in v1.1) OPTIONAL Object Contains rental app information in the android and ios JSON objects. - android (added in v1.1) OPTIONAL Object Contains rental app download and app discovery information for the Android platform in the store_uri and discovery_uri fields. See examples of how to use these fields and supported analytics . \u2003- store_uri (added in v1.1) Conditionally REQUIRED URI URI where the rental Android app can be downloaded from. Typically this will be a URI to an app store such as Google Play. If the URI points to an app store such as Google Play, the URI SHOULD follow Android best practices so the viewing app can directly open the URI to the native app store app instead of a website. If a rental_uris . android field is populated then this field is REQUIRED, otherwise it is OPTIONAL. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. Example value: https://play.google.com/store/apps/details?id=com.abcrental.android \u2003- discovery_uri (added in v1.1) Conditionally REQUIRED URI URI that can be used to discover if the rental Android app is installed on the device (e.g., using PackageManager.queryIntentActivities() ). This intent is used by viewing apps to prioritize rental apps for a particular user based on whether they already have a particular rental app installed. This field is REQUIRED if a rental_uris . android field is populated, otherwise it is OPTIONAL. Example value: com.abcrental.android:// - ios (added in v1.1) OPTIONAL Object Contains rental information for the iOS platform in the store_uri and discovery_uri fields. See examples of how to use these fields and supported analytics . \u2003- store_uri (added in v1.1) Conditionally REQUIRED URI URI where the rental iOS app can be downloaded from. Typically this will be a URI to an app store such as the Apple App Store. If the URI points to an app store such as the Apple App Store, the URI SHOULD follow iOS best practices so the viewing app can directly open the URI to the native app store app instead of a website. If a rental_uris . ios field is populated then this field is REQUIRED, otherwise it is OPTIONAL. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. Example value: https://apps.apple.com/app/apple-store/id123456789 \u2003- discovery_uri (added in v1.1) Conditionally REQUIRED URI URI that can be used to discover if the rental iOS app is installed on the device (e.g., using UIApplication canOpenURL: ). This intent is used by viewing apps to prioritize rental apps for a particular user based on whether they already have a particular rental app installed. This field is REQUIRED if a rental_uris . ios field is populated, otherwise it is OPTIONAL. Example value: com.abcrental.ios:// Example: { \"last_updated\" : 1611598155 , \"ttl\" : 1800 , \"version\" : \"2.2\" , \"data\" :{ \"phone_number\" : \"1-800-555-1234\" , \"name\" : \"Example Ride\" , \"operator\" : \"Example Sharing, Inc\" , \"start_date\" : \"2010-06-10\" , \"purchase_url\" : \"https://www.exampleride.org\" , \"timezone\" : \"US/Central\" , \"license_url\" : \"https://exampleride.org/data-license.html\" , \"short_name\" : \"Example Ride\" , \"email\" : \"customerservice@exampleride.org\" , \"url\" : \"http://www.exampleride.org\" , \"feed_contact_email\" : da tafee d@exampleride.org , \"system_id\" : \"exampleride\" , \"language\" : \"en\" , } }","title":"system_information.json"},{"location":"reference/#vehicle_typesjson-added-in-v21","text":"REQUIRED of systems that include information about vehicle types in the free_bike_status file. If this file is not included, then all vehicles in the feed are assumed to be non-motorized bicycles. This file SHOULD be published by systems offering multiple vehicle types for rental, for example pedal bikes and ebikes. The following fields are all attributes within the main \"data\" object for this feed. Field Name REQUIRED Type Defines vehicle_types Yes Array Array that contains one object per vehicle type in the system as defined below. - vehicle_type_id Yes ID Unique identifier of a vehicle type. See Field Types above for ID field requirements. - form_factor Yes Enum The vehicle's general form factor. Current valid values are: bicycle car moped scooter other - propulsion_type Yes Enum The primary propulsion type of the vehicle. Current valid values are: human (Pedal or foot propulsion) electric_assist (Provides power only alongside human propulsion) electric (Contains throttle mode with a battery-powered motor) combustion (Contains throttle mode with a gas engine-powered motor) This field was inspired by, but differs from the propulsion types field described in the Open Mobility Foundation Mobility Data Specification . - max_range_meters Conditionally REQUIRED Non-negative float If the vehicle has a motor (as indicated by having a value other than human in the propulsion_type field), this field is REQUIRED. This represents the furthest distance in meters that the vehicle can travel without recharging or refueling when it has the maximum amount of energy potential (for example, a full battery or full tank of gas). - name OPTIONAL String The public name of this vehicle type. Example: { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" : { \"vehicle_types\" : [ { \"vehicle_type_id\" : \"abc123\" , \"form_factor\" : \"bicycle\" , \"propulsion_type\" : \"human\" , \"name\" : \"Example Basic Bike\" }, { \"vehicle_type_id\" : \"def456\" , \"form_factor\" : \"scooter\" , \"propulsion_type\" : \"electric\" , \"name\" : \"Example E-scooter V2\" , \"max_range_meters\" : 12345 }, { \"vehicle_type_id\" : \"car1\" , \"form_factor\" : \"car\" , \"propulsion_type\" : \"combustion\" , \"name\" : \"Foor-door Sedan\" , \"max_range_meters\" : 523992 } ] } }","title":"vehicle_types.json (added in v2.1)"},{"location":"reference/#station_informationjson","text":"All stations included in station_information.json are considered public (e.g., can be shown on a map for public use). If there are private stations (such as Capital Bikeshare\u2019s White House station), these SHOULD NOT be included here. Any station that is represented in station_information.json MUST have a corresponding entry in station_status.json . Field Name REQUIRED Type Defines stations Yes Array Array that contains one object per station as defined below. - station_id Yes ID Identifier of a station. - name Yes String The public name of the station for display in maps, digital signage and other text applications. Names SHOULD reflect the station location through the use of a cross street or local landmark. Abbreviations SHOULD NOT be used for names and other text (e.g. St. for Street) unless a location is called by its abbreviated name (e.g. \u201cJFK Airport\u201d). See Text Fields and Naming . Examples: Broadway and East 22nd Street Convention Center Central Park South - short_name OPTIONAL String Short name or other type of identifier. - lat Yes Latitude Latitude of the station in decimal degrees. This field SHOULD have a precision of 6 decimal places (0.000001). See Coordinate Precision . - lon Yes Longitude Longitude of the station in decimal degrees. This field SHOULD have a precision of 6 decimal places (0.000001). See Coordinate Precision . - address OPTIONAL String Address (street number and name) where station is located. This MUST be a valid address, not a free-form text description. Example: 1234 Main Street - cross_street OPTIONAL String Cross street or landmark where the station is located. - region_id OPTIONAL ID Identifier of the region where station is located. See system_regions.json . - post_code OPTIONAL String Postal code where station is located. - rental_methods OPTIONAL Array Payment methods accepted at this station. Current valid values are: key (e.g. operator issued vehicle key / fob / card) creditcard paypass applepay androidpay transitcard accountnumber phone - is_virtual_station (added in v2.1) OPTIONAL Boolean Is this station a location with or without physical infrastructures (docks)? true - The station is a location without physical infrastructure, defined by a point (lat/lon) and/or station_area (below). false - The station consists of physical infrastructure (docks). If this field is empty, it means the station consists of physical infrastructure (docks). This field SHOULD be published in systems that have station locations without standard, internet connected physical docking infrastructure. These may be racks or geofenced areas designated for rental and/or return of vehicles. Locations that fit within this description SHOULD have the is_virtual_station boolean set to true . - station_area (added in v2.1) OPTIONAL GeoJSON Multipolygon A GeoJSON multipolygon that describes the area of a virtual station. If station_area is supplied then the record describes a virtual station. If lat/lon and station_area are both defined, the lat/lon is the significant coordinate of the station (e.g. dock facility or valet drop-off and pick up point). The station_area takes precedence over any ride_allowed rules in overlapping geofencing_zones . - capacity OPTIONAL Non-negative integer Number of total docking points installed at this station, both available and unavailable, regardless of what vehicle types are allowed at each dock. If this is a virtual station defined using the is_virtual_station field, this number represents the total number of vehicles of all types that can be parked at the virtual station. If the virtual station is defined by station_area , this is the number that can park within the station area. If lat / lon are defined, this is the number that can park at those coordinates. - vehicle_capacity (added in v2.1) OPTIONAL Object An object used to describe the parking capacity of virtual stations (defined using the is_virtual_station field), where each key is a vehicle_type_id as described in vehicle_types.json and the value is a number representing the total number of vehicles of this type that can park within the virtual station. If the virtual station is defined by station_area , this is the number that can park within the station area. If lat / lon is defined, this is the number that can park at those coordinates. - vehicle_type_capacity (added in v2.1) OPTIONAL Object An object used to describe the docking capacity of a station where each key is a vehicle_type_id as described in vehicle_types.json and the value is a number representing the total docking points installed at this station, both available and unavailable for the specified vehicle type. - is_valet_station (added in v2.1) OPTIONAL Boolean Are valet services provided at this station? true - Valet services are provided at this station. false - Valet services are not provided at this station. If this field is empty, it is assumed that valet services are not provided at this station. This field\u2019s boolean SHOULD be set to true during the hours which valet service is provided at the station. Valet service is defined as providing unlimited capacity at a station. - rental_uris (added in v1.1) OPTIONAL Object Contains rental URIs for Android, iOS, and web in the android, ios, and web fields. See examples of how to use these fields and supported analytics . \u2003- android (added in v1.1) OPTIONAL URI URI that can be passed to an Android app with an android.intent.action.VIEW Android intent to support Android Deep Links (https://developer.android.com/training/app-links/deep-linking). Please use Android App Links (https://developer.android.com/training/app-links) if possible so viewing apps don\u2019t need to manually manage the redirect of the user to the app store if the user doesn\u2019t have the application installed. This URI SHOULD be a deep link specific to this station, and SHOULD NOT be a general rental page that includes information for more than one station. The deep link SHOULD take users directly to this station, without any prompts, interstitial pages, or logins. Make sure that users can see this station even if they never previously opened the application. If this field is empty, it means deep linking isn\u2019t supported in the native Android rental app. Note that URIs do not necessarily include the station_id for this station - other identifiers can be used by the rental app within the URI to uniquely identify this station. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. Android App Links example value: https://www.abc.com/app?sid=1234567890&platform=android Deep Link (without App Links) example value: com.abcrental.android://open.abc.app/app?sid=1234567890 \u2003- ios (added in v1.1) OPTIONAL URI URI that can be used on iOS to launch the rental app for this station. More information on this iOS feature can be found here . Please use iOS Universal Links (https://developer.apple.com/ios/universal-links/) if possible so viewing apps don\u2019t need to manually manage the redirect of the user to the app store if the user doesn\u2019t have the application installed. This URI SHOULD be a deep link specific to this station, and SHOULD NOT be a general rental page that includes information for more than one station. The deep link SHOULD take users directly to this station, without any prompts, interstitial pages, or logins. Make sure that users can see this station even if they never previously opened the application. If this field is empty, it means deep linking isn\u2019t supported in the native iOS rental app. Note that the URI does not necessarily include the station_id - other identifiers can be used by the rental app within the URL to uniquely identify this station. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. iOS Universal Links example value: https://www.abc.com/app?sid=1234567890&platform=ios Deep Link (without Universal Links) example value: com.abcrental.ios://open.abc.app/app?sid=1234567890 \u2003- web (added in v1.1) OPTIONAL URL URL that can be used by a web browser to show more information about renting a vehicle at this station. This URL SHOULD be a deep link specific to this station, and SHOULD NOT be a general rental page that includes information for more than one station. The deep link SHOULD take users directly to this station, without any prompts, interstitial pages, or logins. Make sure that users can see this station even if they never previously opened the application. If this field is empty, it means deep linking isn\u2019t supported for web browsers. Example value: https://www.abc.com/app?sid=1234567890 Example 1: Physical station { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" : { \"stations\" : [ { \"station_id\" : \"pga\" , \"name\" : \"Parking garage A\" , \"lat\" : 12.345678 , \"lon\" : 45.678901 , \"vehicle_type_capacity\" : { \"abc123\" : 7 , \"def456\" : 9 } } ] } } Example 2: Virtual station { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" :{ \"stations\" :[ { \"station_id\" : \"station12\" , \"station_name\" : \"SE Belmont & SE 10 th \" , \"is_valet_station\" : false , \"is_virtual_station\" : true , \"station_area\" :{ \"type\" : \"MultiPolygon\" , \"coordinates\" :[ [ [ [ -122.655775 , 45.516445 ], [ -122.655705 , 45.516445 ], [ -122.655705 , 45.516495 ], [ -122.655775 , 45.516495 ], [ -122.655775 , 45.516445 ] ] ] ] }, \"capacity\" : 16 , \"vehicle_capacity\" :{ \"abc123\" : 8 , \"def456\" : 8 , \"ghi789\" : 16 } } ] } }","title":"station_information.json"},{"location":"reference/#station_statusjson","text":"Describes the capacity and rental availability of a station. Data returned SHOULD be as close to realtime as possible, but in no case should it be more than 5 minutes out-of-date. See Data Latency . Data reflects the operator's most recent knowledge of the station\u2019s status. Any station that is represented in station_status.json MUST have a corresponding entry in station_information.json . Field Name REQUIRED Type Defines stations Yes Array Array that contains one object per station in the system as defined below. - station_id Yes ID Identifier of a station see station_information.json . - num_bikes_available Yes Non-negative integer Number of functional vehicles physically at the station that may be offered for rental. To know if the vehicles are available for rental, see is_renting . If is_renting = true this is the number of vehicles that are currently available for rent. If is_renting = false this is the number of vehicles that would be available for rent if the station were set to allow rentals. - vehicle_types_available (added in v2.1) Conditionally REQUIRED Array This field is REQUIRED if the vehicle_types.json file has been defined. This field's value is an array of objects. Each of these objects is used to model the total number of each defined vehicle type available at a station. The total number of vehicles from each of these objects SHOULD add up to match the value specified in the num_bikes_available field. \u2003- vehicle_type_id (added in v2.1) Yes ID The vehicle_type_id of each vehicle type at the station as described in vehicle_types.json . This field is REQUIRED if the vehicle_types.json is defined. \u2003- count (added in v2.1) Yes Non-negative integer A number representing the total number of available vehicles of the corresponding vehicle_type_id as defined in vehicle_types.json at the station. - num_bikes_disabled OPTIONAL Non-negative integer Number of disabled vehicles of any type at the station. Vendors who do not want to publicize the number of disabled vehicles or docks in their system can opt to omit station capacity (in station_information.json , num_bikes_disabled , and num_docks_disabled (as of v2.0) . If station capacity is published, then broken docks/vehicles can be inferred (though not specifically whether the decreased capacity is a broken vehicle or dock). - num_docks_available Conditionally REQUIRED (as of v2.0) Non-negative integer REQUIRED except for stations that have unlimited docking capacity (e.g. virtual stations) (as of v2.0) . Number of functional docks physically at the station that are able to accept vehicles for return. To know if the docks are accepting vehicle returns, see is_returning . If is_returning = true this is the number of docks that are currently available to accept vehicle returns. If is_returning = false this is the number of docks that would be available if the station were set to allow returns. - vehicle_docks_available (added in v2.1) Conditionally REQUIRED Array This field is REQUIRED in feeds where the vehicle_types.json is defined and where certain docks are only able to accept certain vehicle types. If every dock at the station is able to accept any vehicle type, then this field is not REQUIRED. This field's value is an array of objects. Each of these objects is used to model the number of docks available for certain vehicle types. The total number of docks from each of these objects SHOULD add up to match the value specified in the num_docks_available field. \u2003- vehicle_type_ids (added in v2.1) Yes Array An array of strings where each string represents a vehicle_type_id that is able to use a particular type of dock at the station \u2003- count (added in v2.1) Yes Non-negative integer A number representing the total number of available vehicles of the corresponding vehicle type as defined in the vehicle_types array at the station that can accept vehicles of the specified types in the vehicle_types array. - num_docks_disabled OPTIONAL Non-negative integer Number of disabled dock points at the station. - is_installed Yes Boolean Is the station currently on the street? true - Station is installed on the street. false - Station is not installed on the street. Boolean SHOULD be set to true when equipment is present on the street. In seasonal systems where equipment is removed during winter, boolean SHOULD be set to false during the off season. May also be set to false to indicate planned (future) stations which have not yet been installed. - is_renting Yes Boolean Is the station currently renting vehicles? true - Station is renting vehicles. Even if the station is empty, if it would otherwise allow rentals, this value MUST be true . false - Station is not renting vehicles. If the station is temporarily taken out of service and not allowing rentals, this field MUST be set to false . If a station becomes inaccessible to users due to road construction or other factors this field SHOULD be set to false . Field SHOULD be set to false during hours or days when the system is not offering vehicles for rent. - is_returning Yes Boolean Is the station accepting vehicle returns? true - Station is accepting vehicle returns. Even if the station is full, if it would otherwise allow vehicle returns, this value MUST be true . false - Station is not accepting vehicle returns. If the station is temporarily taken out of service and not allowing vehicle returns, this field MUST be set to false . If a station becomes inaccessible to users due to road construction or other factors, this field SHOULD be set to false . - last_reported Yes Timestamp The last time this station reported its status to the operator's backend. Example: { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" : { \"stations\" : [ { \"station_id\" : \"station 1\" , \"is_installed\" : true , \"is_renting\" : true , \"is_returning\" : true , \"last_reported\" : 1609866125 , \"num_docks_available\" : 3 , \"vehicle_docks_available\" : [{ \"vehicle_type_ids\" : [ \"abc123\" ], \"count\" : 2 }, { \"vehicle_type_ids\" : [ \"def456\" ], \"count\" : 1 }], \"num_bikes_available\" : 1 , \"vehicle_types_available\" : [{ \"vehicle_type_id\" : \"abc123\" , \"count\" : 1 }, { \"vehicle_type_id\" : \"def456\" , \"count\" : 0 }] }, { \"station_id\" : \"station 2\" , \"is_installed\" : true , \"is_renting\" : true , \"is_returning\" : true , \"last_reported\" : 1609866106 , \"num_docks_available\" : 8 , \"vehicle_docks_available\" : [{ \"vehicle_type_ids\" : [ \"abc123\" ], \"count\" : 6 }, { \"vehicle_type_ids\" : [ \"def456\" ], \"count\" : 2 }], \"num_bikes_available\" : 6 , \"vehicle_types_available\" : [{ \"vehicle_type_id\" : \"abc123\" , \"count\" : 2 }, { \"vehicle_type_id\" : \"def456\" , \"count\" : 4 }] } ] } }","title":"station_status.json"},{"location":"reference/#free_bike_statusjson","text":"(as of v2.1) Describes all vehicles that are not currently in active rental. REQUIRED for free floating (dockless) vehicles. OPTIONAL for station based (docked) vehicles. Data returned SHOULD be as close to realtime as possible, but in no case should it be more than 5 minutes out-of-date. See Data Latency . Vehicles that are part of an active rental MUST NOT appear in this feed. Vehicles listed as available for rental MUST be in the field and accessible to users. Vehicles that are not accessible (e.g. in a warehouse or in transit) MUST NOT appear as available for rental. Field Name REQUIRED Type Defines bikes Yes Array Array that contains one object per vehicle that is currently stopped as defined below. - bike_id Yes ID Identifier of a vehicle. The bike_id identifier MUST be rotated to a random string after each trip to protect user privacy (as of v2.0) . Use of persistent vehicle IDs poses a threat to user privacy. The bike_id identifier SHOULD only be rotated once per trip. - lat Conditionally REQUIRED (as of v2.1) Latitude Latitude of the vehicle in decimal degrees. (as of v2.1) This field is REQUIRED if station_id is not provided for this vehicle (free floating). This field SHOULD have a precision of 6 decimal places (0.000001). See Coordinate Precision . - lon Conditionally REQUIRED (as of v2.1) Longitude Longitude of the vehicle. (as of v2.1) This field is REQUIRED if station_id is not provided for this vehicle (free floating). - is_reserved Yes Boolean Is the vehicle currently reserved? true - Vehicle is currently reserved. false - Vehicle is not currently reserved. - is_disabled Yes Boolean Is the vehicle currently disabled? true - Vehicle is currently disabled. false - Vehicle is not currently disabled. This field is used to indicate vehicles that are in the field but not available for rental. This may be due to a mechanical issue, low battery etc. Publishing this data may prevent users from attempting to rent vehicles that are disabled and not available for rental. - rental_uris (added in v1.1) OPTIONAL Object JSON object that contains rental URIs for Android, iOS, and web in the android, ios, and web fields. See examples of how to use these fields and supported analytics . \u2003- android (added in v1.1) OPTIONAL URI URI that can be passed to an Android app with an android.intent.action.VIEW Android intent to support Android Deep Links (https://developer.android.com/training/app-links/deep-linking). Please use Android App Links (https://developer.android.com/training/app-links) if possible, so viewing apps do not need to manually manage the redirect of the user to the app store if the user does not have the application installed. This URI SHOULD be a deep link specific to this vehicle, and SHOULD NOT be a general rental page that includes information for more than one vehicle. The deep link SHOULD take users directly to this vehicle, without any prompts, interstitial pages, or logins. Make sure that users can see this vehicle even if they never previously opened the application. Note that as a best practice providers SHOULD rotate identifiers within deep links after each rental to avoid unintentionally exposing private vehicle trip origins and destinations. If this field is empty, it means deep linking is not supported in the native Android rental app. Note that URIs do not necessarily include the bike_id for this vehicle - other identifiers can be used by the rental app within the URI to uniquely identify this vehicle. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. Android App Links example value: https://www.abc.com/app?sid=1234567890&platform=android Deep Link (without App Links) example value: com.abcrental.android://open.abc.app/app?sid=1234567890 \u2003- ios (added in v1.1) OPTIONAL URI URI that can be used on iOS to launch the rental app for this vehicle. More information on this iOS feature can be found here . Please use iOS Universal Links (https://developer.apple.com/ios/universal-links/) if possible, so viewing apps do not need to manually manage the redirect of the user to the app store if the user does not have the application installed. This URI SHOULD be a deep link specific to this vehicle, and SHOULD NOT be a general rental page that includes information for more than one vehicle. The deep link SHOULD take users directly to this vehicle, without any prompts, interstitial pages, or logins. Make sure that users can see this vehicle even if they never previously opened the application. Note that as a best practice providers SHOULD rotate identifiers within deep links after each rental to avoid unintentionally exposing private vehicle trip origins and destinations. If this field is empty, it means deep linking is not supported in the native iOS rental app. Note that the URI does not necessarily include the bike_id - other identifiers can be used by the rental app within the URL to uniquely identify this vehicle. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. iOS Universal Links example value: https://www.abc.com/app?sid=1234567890&platform=ios Deep Link (without Universal Links) example value: com.abcrental.ios://open.abc.app/app?sid=1234567890 \u2003- web (added in v1.1) OPTIONAL URL URL that can be used by a web browser to show more information about renting a vehicle at this vehicle. This URL SHOULD be a deep link specific to this vehicle, and SHOULD NOT be a general rental page that includes information for more than one vehicle. The deep link SHOULD take users directly to this vehicle, without any prompts, interstitial pages, or logins. Make sure that users can see this vehicle even if they never previously opened the application. Note that as a best practice providers SHOULD rotate identifiers within deep links after each rental to avoid unintentionally exposing private vehicle trip origins and destinations. If this field is empty, it means deep linking isn\u2019t supported for web browsers. Example value: https://www.abc.com/app?sid=1234567890 - vehicle_type_id (added in v2.1) Conditionally REQUIRED ID The vehicle_type_id of this vehicle as described in vehicle_types.json . This field is REQUIRED if the vehicle_types.json is defined. - last_reported (added in v2.1) OPTIONAL Timestamp The last time this vehicle reported its status to the operator's backend. - current_range_meters (added in v2.1) Conditionally REQUIRED Non-negative float If the corresponding vehicle_type definition for this vehicle has a motor, then this field is REQUIRED. This value represents the furthest distance in meters that the vehicle can travel without recharging or refueling with the vehicle's current charge or fuel. - station_id (added in v2.1) Conditionally REQUIRED ID Identifier referencing the station_id field in system_information.json . REQUIRED only if the vehicle is currently at a station and the vehicle_types.json file has been defined. - pricing_plan_id (added in v2.1) OPTIONAL ID The plan_id of the pricing plan this vehicle is eligible for as described in system_pricing_plans.json . Example: { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" :{ \"bikes\" :[ { \"bike_id\" : \"ghi789\" , \"last_reported\" : 1609866109 , \"lat\" : 12.34 , \"lon\" : 56.78 , \"is_reserved\" : false , \"is_disabled\" : false , \"vehicle_type_id\" : \"abc123\" }, { \"bike_id\" : \"jkl012\" , \"last_reported\" : 1609866204 , \"is_reserved\" : false , \"is_disabled\" : false , \"vehicle_type_id\" : \"def456\" , \"current_range_meters\" : 6543 , \"station_id\" : 86 , \"pricing_plan_id\" : \"plan3\" } ] } }","title":"free_bike_status.json"},{"location":"reference/#system_hoursjson","text":"This OPTIONAL file is used to describe hours and days of operation when vehicles are available for rental. If system_hours.json is not published, it indicates that vehicles are available for rental 24 hours a day, 7 days a week. Field Name REQUIRED Type Defines rental_hours Yes Array Array of objects as defined below. The array MUST contain a minimum of one object identifying hours for every day of the week or a maximum of two for each day of the week objects ( one for each user type). - user_types Yes Array An array of member and/or nonmember value(s). This indicates that this set of rental hours applies to either members or non-members only. - days Yes Array An array of abbreviations (first 3 letters) of English names of the days of the week for which this object applies (e.g. [\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat, \"sun\"] ). Rental hours MUST NOT be defined more than once for each day and user type. - start_time Yes Time Start time for the hours of operation of the system in the time zone indicated in system_information.json . - end_time Yes Time End time for the hours of operation of the system in the time zone indicated in system_information.json . Example: { \"last_updated\" : 1609866247 , \"ttl\" : 86400 , \"version\" : \"2.2\" , \"data\" : { \"rental_hours\" : [ { \"user_types\" : [ \"member\" ], \"days\" : [ \"sat\" , \"sun\" ], \"start_time\" : \"00:00:00\" , \"end_time\" : \"23:59:59\" }, { \"user_types\" : [ \"nonmember\" ], \"days\" : [ \"sat\" , \"sun\" ], \"start_time\" : \"05:00:00\" , \"end_time\" : \"23:59:59\" }, { \"user_types\" : [ \"member\" , \"nonmember\" ], \"days\" : [ \"mon\" , \"tue\" , \"wed\" , \"thu\" , \"fri\" ], \"start_time\" : \"00:00:00\" , \"end_time\" : \"23:59:59\" } ] } }","title":"system_hours.json"},{"location":"reference/#system_calendarjson","text":"Describes the operating calendar for a system. This OPTIONAL file SHOULD be published by systems that operate seasonally or do not offer continuous year-round service. Field Name REQUIRED Type Defines calendars Yes Array Array of objects describing the system operational calendar. A minimum of one calendar object is REQUIRED. If start and end dates are the same every year, then start_year and end_year SHOULD be omitted. - start_month Yes Non-negative Integer Starting month for the system operations ( 1 - 12 ). - start_day Yes Non-negative Integer Starting date for the system operations ( 1 - 31 ). - start_year OPTIONAL Non-negative Integer Starting year for the system operations. - end_month Yes Non-negative Integer Ending month for the system operations ( 1 - 12 ). - end_day Yes Non-negative Integer Ending date for the system operations ( 1 - 31 ). - end_year OPTIONAL Non-negative Integer Ending year for the system operations. Example: { \"last_updated\" : 1604333830 , \"ttl\" : 86400 , \"version\" : \"2.2\" , \"data\" :{ \"calendars\" :[ { \"start_month\" : 4 , \"start_day\" : 1 , \"start_year\" : 2020 , \"end_month\" : 11 , \"end_day\" : 5 , \"end_year\" : 2020 } ] } }","title":"system_calendar.json"},{"location":"reference/#system_regionsjson","text":"Describe regions for a system that is broken up by geographic or political region. Field Name REQUIRED Type Defines regions Yes Array Array of objects as defined below. - region_id Yes ID Identifier for the region. - name Yes String Public name for this region. Example: { \"last_updated\" : 1604332380 , \"ttl\" : 86400 , \"version\" : \"2.2\" , \"data\" :{ \"regions\" :[ { \"name\" : \"North\" , \"region_id\" : \"3\" }, { \"name\" : \"East\" , \"region_id\" : \"4\" }, { \"name\" : \"South\" , \"region_id\" : \"5\" }, { \"name\" : \"West\" , \"region_id\" : \"6\" } ] } }","title":"system_regions.json"},{"location":"reference/#system_pricing_plansjson","text":"Describes pricing for the system. Field Name REQUIRED Type Defines plans Yes Array Array of objects as defined below. - plan_id Yes ID Identifier for a pricing plan in the system. - url OPTIONAL URL URL where the customer can learn more about this pricing plan. - name Yes String Name of this pricing plan. - currency Yes String Currency used to pay the fare. This pricing is in ISO 4217 code: http://en.wikipedia.org/wiki/ISO_4217 (e.g. CAD for Canadian dollars, EUR for euros, or JPY for Japanese yen.) - price Yes Non-Negative float OR String Fare price, in the unit specified by currency. If string, MUST be in decimal monetary value. (added in v2.2) Note: v3.0 may only allow non-negative float, therefore future implementations SHOULD be non-negative float. In case of non-rate price, this field is the total price. In case of rate price, this field is the base price that is charged only once per trip (e.g., price for unlocking) in addition to per_km_pricing and/or per_min_pricing . - is_taxable Yes Boolean Will additional tax be added to the base price? true - Yes. false - No. false MAY be used to indicate that tax is not charged or that tax is included in the base price. - description Yes String Customer-readable description of the pricing plan. This SHOULD include the duration, price, conditions, etc. that the publisher would like users to see. - per_km_pricing (added in v2.2) OPTIONAL Array Array of segments when the price is a function of distance travelled, displayed in kilometers. Total price is the addition of price and all segments in per_km_pricing and per_min_pricing . If this array is not provided, there are no variable prices based on distance. \u2003\u2003- start (added in v2.2) Yes Non-Negative Integer The kilometer at which this segment rate starts being charged (inclusive) . \u2003\u2003- rate (added in v2.2) Yes Float Rate that is charged for each kilometer interval after the start . Can be a negative number, which indicates that the traveller will receive a discount. \u2003\u2003- interval (added in v2.2) Yes Non-Negative Integer Interval in kilometers at which the rate of this segment is either reapplied indefinitely, or if defined, up until (but not including) end kilometer. An interval of 0 indicates the rate is only charged once. \u2003\u2003- end (added in v2.2) OPTIONAL Non-Negative Integer The kilometer at which the rate will no longer apply (exclusive) e.g. if end is 20 the rate no longer applies at 20.00 km. If this field is empty, the price issued for this segment is charged until the trip ends, in addition to following segments. - per_min_pricing (added in v2.2) OPTIONAL Array Array of segments when the price is a function of time travelled, displayed in minutes. Total price is the addition of price and all segments in per_km_pricing and per_min_pricing . If this array is not provided, there are no variable prices based on time. \u2003\u2003- start (added in v2.2) Yes Non-Negative Integer The minute at which this segment rate starts being charged (inclusive) . \u2003\u2003- rate (added in v2.2) Yes Float Rate that is charged for each minute interval after the start . Can be a negative number, which indicates that the traveller will receive a discount. \u2003\u2003- interval (added in v2.2) Yes Non-Negative Integer Interval in minutes at which the rate of this segment is either reapplied indefinitely, or if defined, up until (but not including) end minute. An interval of 0 indicates the rate is only charged once. \u2003\u2003- end (added in v2.2) OPTIONAL Non-Negative Integer The minute at which the rate will no longer apply (exclusive) e.g. if end is 20 the rate no longer applies after 19:59. If this field is empty, the price issued for this segment is charged until the trip ends, in addition to following segments. - surge_pricing (added in v2.2) OPTIONAL Boolean Is there currently an increase in price in response to increased demand in this pricing plan? If this field is empty, it means these is no surge pricing in effect. true - Surge pricing is in effect. false - Surge pricing is not in effect.","title":"system_pricing_plans.json"},{"location":"reference/#examples-added-in-v22","text":"Example 1: The user does not pay more than the base price for the first 10 km. After 10 km the user pays $1 per km. After 25 km the user pays $0.50 per km and an additional $3 every 5 km, the extension price, in addition to $0.50 per km. { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" : { \"plans\" : [ { \"plan_id\" : \"plan2\" , \"name\" : \"One-Way\" , \"currency\" : \"USD\" , \"price\" : 2 , \"is_taxable\" : false , \"description\" : \"Includes 10km, overage fees apply after 10km.\" , \"per_km_pricing\" : [ { \"start\" : 10 , \"rate\" : 1 , \"interval\" : 1 , \"end\" : 25 }, { \"start\" : 25 , \"rate\" : 0.5 , \"interval\" : 1 }, { \"start\" : 25 , \"rate\" : 3 , \"interval\" : 5 } ] } ] } } Example 2: This example demonstrates a pricing scheme that has a rate both by minute and by km. The user is charged $0.25 per km as well as $0.50 per minute. Both of these rates happen concurrently and are not dependent on one another. { \"last_updated\" : 1609866247 , \"ttl\" : 0 , \"version\" : \"2.2\" , \"data\" : { \"plans\" : [ { \"plan_id\" : \"plan3\" , \"name\" : \"Simple Rate\" , \"currency\" : \"CAD\" , \"price\" : 3 , \"is_taxable\" : true , \"description\" : \"$3 unlock fee, $0.25 per kilometer and 0.50 per minute.\" , \"per_km_pricing\" : [ { \"start\" : 0 , \"rate\" : 0.25 , \"interval\" : 1 } ], \"per_min_pricing\" : [ { \"start\" : 0 , \"rate\" : 0.50 , \"interval\" : 1 } ] } ] } }","title":"Examples (added in v2.2)"},{"location":"reference/#system_alertsjson","text":"This feed is intended to inform customers about changes to the system that do not fall within the normal system operations. For example, system closures due to weather would be listed here, but a system that only operated for part of the year would have that schedule listed in the system_calendar.json feed. Obsolete alerts SHOULD be removed so the client application can safely present to the end user everything present in the feed. Field Name REQUIRED Type Defines alerts Yes Array Array of objects each indicating a system alert as defined below. - alert_id Yes ID Identifier for this alert. - type Yes Enum Valid values are: system_closure station_closure station_move other - times OPTIONAL Array Array of objects with the fields start and end indicating when the alert is in effect (e.g. when the system or station is actually closed, or when it is scheduled to be moved). \u2003- start Yes Timestamp Start time of the alert. \u2003- end OPTIONAL Timestamp End time of the alert. If there is currently no end time planned for the alert, this can be omitted. - station_ids OPTIONAL Array If this is an alert that affects one or more stations, include their ID(s). Otherwise omit this field. If both station_id and region_id are omitted, this alert affects the entire system. - region_ids OPTIONAL Array If this system has regions, and if this alert only affects certain regions, include their ID(s). Otherwise, omit this field. If both station_id s and region_id s are omitted, this alert affects the entire system. - url OPTIONAL URL URL where the customer can learn more information about this alert. - summary Yes String A short summary of this alert to be displayed to the customer. - description OPTIONAL String Detailed description of the alert. - last_updated OPTIONAL Timestamp Indicates the last time the info for the alert was updated. Example: { \"last_updated\" : 1604198100 , \"ttl\" : 60 , \"version\" : \"2.2\" , \"data\" :{ \"alerts\" :[ { \"alert_id\" : \"21\" , \"type\" : \"station_closure\" , \"station_ids\" :[ \"123\" , \"456\" , \"789\" ], \"times\" :[ { \"start\" : \"1604448000\" , \"end\" : \"1604674800\" } ], \"url\" : \"https://example.com/more-info\" , \"summary\" : \"Disruption of Service\" , \"description\" : \"The three stations on Broadway will be out of service from 12:00am Nov 3 to 3:00pm Nov 6th to accommodate road work\" , \"last_updated\" : 1604519393 } ] } }","title":"system_alerts.json"},{"location":"reference/#geofencing_zonesjson-added-in-v21","text":"Describes geofencing zones and their associated rules and attributes. Geofenced areas are delineated using GeoJSON in accordance with RFC 7946 . By default, no restrictions apply everywhere. Geofencing zones SHOULD be modeled according to restrictions rather than allowance. An operational area (outside of which vehicles cannot be used) SHOULD be defined with a counterclockwise polygon, and a limitation area (in which vehicles can be used under certain restrictions) SHOULD be defined with a clockwise polygon. Geofences and GPS operate in two dimensions. Restrictions placed on an overpass or bridge will also be applied to the roadway or path beneath. Care SHOULD be taken when developing geofence based policies that rely on location data. Location data from GPS, cellular and Wi-Fi signals are subject to interference resulting in accuracy levels in the tens of meters or greater. This may result in vehicles being placed within a geofenced zone when they are actually outside or adjacent to the zone. Transit time between server and client can also impact when a user is notified of a geofence based policy. A vehicle traveling at 15kph can be well inside of a restricted zone before a notification is received. Field Name REQUIRED Type Defines geofencing_zones Yes GeoJSON FeatureCollection Each geofenced zone and its associated rules and attributes is described as an object within the array of features, as follows. - type Yes String \u201cFeatureCollection\u201d (as per IETF RFC 7946 ). - features Yes Array Array of objects as defined below. \u2003- type Yes String \u201cFeature\u201d (as per IETF RFC 7946 ). \u2003- geometry Yes GeoJSON Multipolygon A polygon that describes where rides might not be able to start, end, go through, or have other limitations. A clockwise arrangement of points defines the area enclosed by the polygon, while a counterclockwise order defines the area outside the polygon ( right-hand rule ). All geofencing zones contained in this list are public (i.e., can be shown on a map for public use). \u2003- properties Yes Object Properties: As defined below, describing travel allowances and limitations. \u2003\u2003- name OPTIONAL String Public name of the geofencing zone. \u2003\u2003- start OPTIONAL Timestamp Start time of the geofencing zone. If the geofencing zone is always active, this can be omitted. \u2003\u2003- end OPTIONAL Timestamp End time of the geofencing zone. If the geofencing zone is always active, this can be omitted. \u2003\u2003- rules OPTIONAL Array Array that contains one object per rule as defined below. In the event of colliding rules within the same polygon, the earlier rule (in order of the JSON file) takes precedence. In the case of overlapping polygons, the combined set of rules associated with the overlapping polygons applies to the union of the polygons. In the event of colliding rules in this set, the earlier rule (in order of the JSON file) also takes precedence. \u2003\u2003\u2003- vehicle_type_id OPTIONAL Array Array of IDs of vehicle types for which any restrictions SHOULD be applied (see vehicle type definitions in PR #136 ). If vehicle_type_ids are not specified, then restrictions apply to all vehicle types. \u2003\u2003\u2003- ride_allowed Conditionally REQUIRED Boolean REQUIRED if rules array is defined. Is the undocked (\u201cfree bike\u201d) ride allowed to start and end in this zone? true - Undocked (\u201cfree bike\u201d) ride can start and end in this zone. false - Undocked (\u201cfree bike\u201d) ride cannot start and end in this zone. \u2003\u2003\u2003- ride_through_allowed Conditionally REQUIRED Boolean REQUIRED if rules array is defined. Is the ride allowed to travel through this zone? true - Ride can travel through this zone. false - Ride cannot travel through this zone. \u2003\u2003\u2003- maximum_speed_kph OPTIONAL Non-negative Integer What is the maximum speed allowed, in kilometers per hour? If there is no maximum speed to observe, this can be omitted. Example: { \"last_updated\" : 1604198100 , \"ttl\" : 60 , \"version\" : \"2.2\" , \"data\" :{ \"geofencing_zones\" :{ \"type\" : \"FeatureCollection\" , \"features\" :[ { \"type\" : \"Feature\" , \"geometry\" :{ \"type\" : \"MultiPolygon\" , \"coordinates\" :[ [ [ [ -122.578067 , 45.562982 ], [ -122.661838 , 45.562741 ], [ -122.661151 , 45.504542 ], [ -122.578926 , 45.5046625 ], [ -122.578067 , 45.562982 ] ] ], [ [ [ -122.650680 , 45.548197 ], [ -122.650852 , 45.534731 ], [ -122.630939 , 45.535212 ], [ -122.630424 , 45.548197 ], [ -122.650680 , 45.548197 ] ] ] ] }, \"properties\" :{ \"name\" : \"NE 24th/NE Knott\" , \"start\" : 1593878400 , \"end\" : 1593907260 , \"rules\" :[ { \"vehicle_type_id\" :[ \"moped1\" , \"car1\" ], \"ride_allowed\" : false , \"ride_through_allowed\" : true , \"maximum_speed_kph\" : 10 } ] } } ] } } }","title":"geofencing_zones.json (added in v2.1)"},{"location":"reference/#deep-links-added-in-v11","text":"Deep links to iOS, Android, and web apps are supported via URIs in the system_information.json , station_information.json , and free_bike_status.json files. The following sections describe how analytics can be added to these URIs, as well as some examples. For further examples, see \"What's New in GBFS\" .","title":"Deep Links (added in v1.1)"},{"location":"reference/#analytics-added-in-v11","text":"In all of the rental URI fields, a viewing app can report the origin of a deep link to request to a rental app by appending the client_id (added in v1.1) parameter to the URI along with the domain name for the viewing app. For example, if Google is the viewing app, it can append: client_id=google.com ...to the URI field to report that Google is the originator of the deep link request. If the Android URI is: com.abcrental.android://open.abc.app/stations?id=1234567890 ...then the URI used by Google would be: com.abcrental.android://open.abc.app/stations?id=1234567890&client_id=google.com Other supported parameters include: ad_id (added in v1.1) - Advertising ID issued to the viewing app (e.g., IFDA on iOS) token (added in v1.1) - A token identifier that was issued by the rental app to the viewing app.","title":"Analytics (added in v1.1)"},{"location":"reference/#examples-added-in-v11","text":"Example 1 - App Links on Android and Universal Links on iOS are supported: system_information.json { \"last_updated\" : 1572447999 , \"ttl\" : 60 , \"version\" : \"2.2\" , \"data\" :{ \"system_id\" : \"abc_cityname\" , \"short_name\" : \"ABC Bike Rental\" , \"rental_apps\" :{ \"android\" :{ \"discovery_uri\" : \"com.abcrental.android://\" }, \"ios\" :{ \"discovery_uri\" : \"com.abcrental.ios://\" } } ... station_information.json { \"last_updated\" : 1609866247 , \"ttl\" : 60 , \"version\" : \"2.2\" , \"data\" :{ \"stations\" :[ { \"station_id\" : \"425\" , \"name\" : \"Coppertail\" , \"lat\" : 27.9563335328521 , \"lon\" : -82.430436084371 , \"rental_uris\" :{ \"android\" : \"https://www.abc.com/app?sid=1234567890&platform=android\" , \"ios\" : \"https://www.abc.com/app?sid=1234567890&platform=ios\" } }, ... Note that the Android URI and iOS Universal Link URLs don\u2019t necessarily use the same identifier as the station_id. Example 2 - App Links are not supported on Android and Universal Links are not supported on iOS, but deep links are still supported on Android and iOS: system_information.json { \"last_updated\" : 1572447999 , \"ttl\" : 60 , \"version\" : \"2.2\" , \"data\" : { \"system_id\" : \"abc_cityname\" , \"short_name\" : \"ABC Bike Rental\" , \"rental_apps\" : { \"android\" : { \"discovery_uri\" : \"com.abcrental.android://\" \"store_uri\" : \"https://play.google.com/store/apps/details?id=com.abcrental.android\" , }, \"ios\" : { \"store_uri\" : \"https://apps.apple.com/app/apple-store/id123456789\" , \"discovery_uri\" : \"com.abcrental.ios://\" } }, ... station_information.json { \"last_updated\" : 1609866247 , \"ttl\" : 60 , \"version\" : \"2.2\" , \"data\" :{ \"stations\" :[ { \"station_id\" : \"425\" , \"name\" : \"Coppertail\" , \"lat\" : 27.9563335328521 , \"lon\" : -82.430436084371 , \"rental_uris\" :{ \"android\" : \"com.abcrental.android://open.abc.app/app?sid=1234567890\" , \"ios\" : \"com.abcrental.ios://open.abc.app/app?sid=1234567890\" } }, ... Example 3 - Deep link web URLs are supported, but not Android or iOS native apps: station_information.json { \"last_updated\" : 1609866247 , \"ttl\" : 60 , \"version\" : \"2.2\" , \"data\" :{ \"stations\" :[ { \"station_id\" : \"425\" , \"name\" : \"Coppertail\" , \"lat\" : 27.9563335328521 , \"lon\" : -82.430436084371 , \"rental_uris\" :{ \"web\" : \"https://www.abc.com/app?sid=1234567890\" } }, ...","title":"Examples (added in v1.1)"},{"location":"reference/#disclaimers","text":"Apple Pay, PayPass and other third-party product and service names are trademarks or registered trademarks of their respective owners.","title":"Disclaimers"},{"location":"reference/#license","text":"Except as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 3.0 License .","title":"License"},{"location":"resources/","text":"Resources \u00b6 There are a multitude of tools and services available to help with the creation, implementation, and consumption of GBFS. Below is an extensive, although by no means exhaustive, list of tools and services. GBFS Policy Guides \u00b6 GBFS and Shared Mobility Policy (Americas): The guide describes how GBFS can advance cities\u2019 efforts to support sustainable transportation and how developing more comprehensive GBFS policies can benefit everyone. Also available in Espa\u00f1ol and Portugu\u00eas . GBFS and Shared Mobility Policy (Europe): The guide describes how GBFS can advance cities\u2019 efforts to support sustainable transportation and how developing more comprehensive GBFS policies can benefit everyone. Also available in Fran\u00e7ais , Espa\u00f1ol , and Portugu\u00eas . Articles \u00b6 English \u00b6 GBFS v2.3-RC is here to fix (some) of your problems : But even though we love v2.2, GBFS was ready for a few improvements. Let us introduce you to v2.3-RC! Cities, GBFS v2.2 is here for you : What you\u2019re missing out on if you\u2019re still stuck with v1.0 data. The price is right! \ud83d\udcb8 : Previously in GBFS, pricing wasn\u2019t described in much detail. To put it simply, operators could only share a sentence that included the pricing information. GBFS Now Fully Supports Dockless Systems \ud83d\udef4\ud83d\udc4f : GBFS v2.1-RC allows shared mobility providers to share information about the type of vehicle that\u2019s available. What\u2019s new in GBFS v2.0 \ud83d\udeb2\ud83d\udef4 : The 2.0 version of the General Bikeshare Feed Specification (GBFS) for shared bike and scooter data also makes key improvements to something that was already good. Espa\u00f1ol \u00b6 GBFS v2.3-RC est\u00e1 aqu\u00ed para solucionar (algunos) de sus problemas : Nos encanta ver los feeds de GBFS v2.2 aparecer en todo el mundo, impulsando tantas nuevas integraciones de planificaci\u00f3n de viajes y facilitando a los viajeros a encontrar su bicicleta, scooter, ciclomotor o autom\u00f3vil compartido m\u00e1s cercano. Ciudades, la v2.2 del GBFS est\u00e1 aqu\u00ed para ustedes : Vea lo que se est\u00e1 perdiendo si est\u00e1 atorado con los datos de la v1.0. GBFS ahora es totalmente compatible con sistemas sin estaci\u00f3n \ud83d\udef4\ud83d\udc4f : GBFS v2.1-RC (un \u201crelease candidate\u201d o versi\u00f3n beta para el lanzamiento) permite compartir informaci\u00f3n sobre estas nuevas opciones de transporte, incluida informaci\u00f3n sobre los veh\u00edculos y d\u00f3nde los viajeros pueden usarlos y devolverlos. \u00bfQu\u00e9 hay de nuevo en GBFS v2.0? \ud83d\udeb2\ud83d\udef4 : La versi\u00f3n 2.0 de GBFS para datos de bicicletas y patinetes compartidos tambi\u00e9n hace mejoras claves en la versi\u00f3n anterior, que ya era buena. Fran\u00e7ais \u00b6 GBFS v2.3-RC est ici pour r\u00e9soudre (certains de) vos probl\u00e8mes : Mais m\u00eame si nous adorons v2.2, GBFS \u00e9tait pr\u00eat pour quelques am\u00e9liorations. Laissez-nous vous pr\u00e9senter \u00e0 v2.3-RC ! Municipalit\u00e9s, le GBFS v2.2 est l\u00e0 pour vous aider : Tout ce qu\u2019il vous manque si vous \u00eates encore coinc\u00e9 avec des donn\u00e9es en v1.0. Du nouveau pour la version 2.0 de GBFS \ud83d\udeb2\ud83d\udef4 : Le format de donn\u00e9es GBFS (General Bikeshare Feed Specification) est maintenant disponible en version 2.0, permettant de suivre l\u2019usage et la disponibilit\u00e9 de v\u00e9los et trottinettes en libre service. Portugu\u00eas \u00b6 GBFS v2.3-RC est\u00e1 aqui para resolver (alguns) dos seus problemas : Mas embora amamos a v2.2, a GBFS estava pronta para algumas melhorias. Permita-nos apresentar a v2.3-RC! Data \u00b6 Third Party GBFS URL Directories \u00b6 Bike Share Research : BSR aims to facilitate the curation of bikeshare service data through collaborative and open data platforms while making it API accessible. Archived Bikeshare Data \u00b6 Open Mobility Foundation Mobility Data Management State of Practice - Public Data Sharing : A list of public mobility data sets, and information about approaches to anonymization published by cities. Proprietary (non-standard) Vendor APIs \u00b6 CityBikes : REST API for aggregated bikeshare data from around the world. Powered by pyBikes . fluctuo Data Flow : Realtime vehicles location API. Exhaustive and reliable standardized data on free-floating mobility services available in real-time. Software for Creating APIs \u00b6 mapintelligenceagency/gbfsQL : Wraps any number of GBFS feeds into an easily consumable GraphQL API. Merges relevant feeds and supports real-time updates for clients via Websockets/GraphQL Subscriptions. OneBusAway : A Java app that consumes GTFS and GTFS-Realtime (along with other formats ) and turns them into an easy to use REST API . OpenTripPlanner : An open source platform for multi-modal and multi-agency journey planning, as well as returning information about a multi-modal graph (using data sources such as GTFS and OpenStreetMap ). pyBikes : Software powering CityBikes for worldwide bikeshare system info. Apps \u00b6 Web Apps \u00b6 Bikeshare Map : Status of all worldwide bikeshare stations. CityMapper Webapp : Webapp with trip planner and route status for over 30 cities. OpenTripPlanner Client GWT : A Google Web Toolkit-based web interface for OpenTripPlanner. OpenTripPlanner.json : A Javascript-based client for OpenTripPlanner. 1-Click : A virtual \u201ctrip aggregator\u201d that assembles information on a wide variety of available modes: public transit, private, rail, rideshare, carpool, volunteer, paratransit, and walking and baking. Open-source on GitHub . Native Apps (open source) \u00b6 findmybikes : an Android app for trip planning and automatic recording ( source code ). MonTransit : an Android app for trip planning and automatic recording ( source code ). OneBusAway Android ( source code ) Fire Phone ( source code ) Google Glass GDK ( source code ) iOS ( source code ) Windows Phone ( source code ) Windows 8 ( source code ) OpenTripPlanner Android iOS Native Apps (closed source) \u00b6 CityMapper Moovit Tiramisu Transit Transit VeloDispo Visualizations \u00b6 GBFS/Open Data Viewer : Visualize micromobility and other open data. GBFS-Viewer : View micromobility data in your browser. GBFS \u00b6 GBFS Specification on GitHub NABSA's Open Data Resources GBFS Libraries \u00b6 BikeshareClient : dotnet client for GBFS written in C#. Enables dotnet developers to create apps and services using data from GBFS Bikeshare systems. GBFS Analysis Tools \u00b6 gbfs R package : Functions to interface with GBFS feeds in R, allowing users to save and accumulate tidy .rds datasets for specified cities/bikeshare programs. GBFS Schema \u00b6 gbfs-json-schema : MobilityData owned JSON schemas for all existing versions of GBFS (including up to v2.2 and v3.0RC). GBFS Validators \u00b6 gbfs-validator : 3rd party tool to validate GBFS feeds GBFS Validator : Go implementation of client, server and validator for GBFS Other Multimodal Data Formats \u00b6 Alliance for Parking Data Standards (APDS) : Formed by the International Parking Institute , the British Parking Association , and the European Parking Association , APDS is a not-for-profit organization with the mission to develop, promote, manage, and maintain a uniform global standard that will allow organizations to share parking data across platforms worldwide. City Data Standard - Mobility : An open data standard for data exchange between cities and shared mobility operators. Data Standards and Guidance for Transportation Planning and Traffic Operations : Standards and/or guidance to be used and adopted by the transportation community collecting, managing, an sharing status and real-time data for transportation planning and operations. Dyno-Demand : A GTFS-based travel demand data format focusing on individual passenger demand suitable for dynamic network modelling developed by San Francisco County Transportation Authority , LMZ LLC, and Urban Labs LLC . Dyno-Path : ( Under development ) Data from individual passenger trajectories. General Transit Feed Specification : A GTFS feed is a group of text files that contains infrequently changing transit data, like stops, routes, trips, and other schedule data. Transit agencies typically update their GTFS feed every few months. General Travel Network Specification : A planned data specification for sharing travel demand model networks. Managed and Tolled Lanes Feed Specification (MTLFS) : Proposal for a schema that comprises of MTLFS and defined the field used in all of those files developed by Santa Clara Valley Transportation Authority . Mobility as a Service API : A set of open documents and test suite that defines a MaaS-compatible API. Mobility Data Specification : A project of the Open Mobility Foundation (OMF), MDS is a set of open source APIs focused on dockless shared mobility. Inspired by projects like GTFS and GBFS, the goals of MDS are to provide a standardized way for municipalities or other regulatory agencies to regulate operators and enforce policy, and ingest, compare and analyze data from mobility service providers, and to give municipalities the ability to express regulation in machine-readable formats. NeTex : A general purpose XML format designed for the exchange of complex static transport data among distributed systems managed by the CEN standards process . SAE Shared Mobility : Working on a data standard for carshare and transportation network companies/rideshare. Transactional Data Specifications for Transportation Planning and Traffic Operations : Technical specifications for transactional data for entities involved in the provision of demand-responsive transportation. Transit ITS Data Exchange Specification (TIDES) Project : A proposed effort to create standard data structures, APIs, and data management tools for historical transit ITS data including AVL, APC, and AFC Data.","title":"Resources"},{"location":"resources/#resources","text":"There are a multitude of tools and services available to help with the creation, implementation, and consumption of GBFS. Below is an extensive, although by no means exhaustive, list of tools and services.","title":"Resources"},{"location":"resources/#gbfs-policy-guides","text":"GBFS and Shared Mobility Policy (Americas): The guide describes how GBFS can advance cities\u2019 efforts to support sustainable transportation and how developing more comprehensive GBFS policies can benefit everyone. Also available in Espa\u00f1ol and Portugu\u00eas . GBFS and Shared Mobility Policy (Europe): The guide describes how GBFS can advance cities\u2019 efforts to support sustainable transportation and how developing more comprehensive GBFS policies can benefit everyone. Also available in Fran\u00e7ais , Espa\u00f1ol , and Portugu\u00eas .","title":"GBFS Policy Guides"},{"location":"resources/#articles","text":"","title":"Articles"},{"location":"resources/#english","text":"GBFS v2.3-RC is here to fix (some) of your problems : But even though we love v2.2, GBFS was ready for a few improvements. Let us introduce you to v2.3-RC! Cities, GBFS v2.2 is here for you : What you\u2019re missing out on if you\u2019re still stuck with v1.0 data. The price is right! \ud83d\udcb8 : Previously in GBFS, pricing wasn\u2019t described in much detail. To put it simply, operators could only share a sentence that included the pricing information. GBFS Now Fully Supports Dockless Systems \ud83d\udef4\ud83d\udc4f : GBFS v2.1-RC allows shared mobility providers to share information about the type of vehicle that\u2019s available. What\u2019s new in GBFS v2.0 \ud83d\udeb2\ud83d\udef4 : The 2.0 version of the General Bikeshare Feed Specification (GBFS) for shared bike and scooter data also makes key improvements to something that was already good.","title":"English"},{"location":"resources/#espanol","text":"GBFS v2.3-RC est\u00e1 aqu\u00ed para solucionar (algunos) de sus problemas : Nos encanta ver los feeds de GBFS v2.2 aparecer en todo el mundo, impulsando tantas nuevas integraciones de planificaci\u00f3n de viajes y facilitando a los viajeros a encontrar su bicicleta, scooter, ciclomotor o autom\u00f3vil compartido m\u00e1s cercano. Ciudades, la v2.2 del GBFS est\u00e1 aqu\u00ed para ustedes : Vea lo que se est\u00e1 perdiendo si est\u00e1 atorado con los datos de la v1.0. GBFS ahora es totalmente compatible con sistemas sin estaci\u00f3n \ud83d\udef4\ud83d\udc4f : GBFS v2.1-RC (un \u201crelease candidate\u201d o versi\u00f3n beta para el lanzamiento) permite compartir informaci\u00f3n sobre estas nuevas opciones de transporte, incluida informaci\u00f3n sobre los veh\u00edculos y d\u00f3nde los viajeros pueden usarlos y devolverlos. \u00bfQu\u00e9 hay de nuevo en GBFS v2.0? \ud83d\udeb2\ud83d\udef4 : La versi\u00f3n 2.0 de GBFS para datos de bicicletas y patinetes compartidos tambi\u00e9n hace mejoras claves en la versi\u00f3n anterior, que ya era buena.","title":"Espa\u00f1ol"},{"location":"resources/#francais","text":"GBFS v2.3-RC est ici pour r\u00e9soudre (certains de) vos probl\u00e8mes : Mais m\u00eame si nous adorons v2.2, GBFS \u00e9tait pr\u00eat pour quelques am\u00e9liorations. Laissez-nous vous pr\u00e9senter \u00e0 v2.3-RC ! Municipalit\u00e9s, le GBFS v2.2 est l\u00e0 pour vous aider : Tout ce qu\u2019il vous manque si vous \u00eates encore coinc\u00e9 avec des donn\u00e9es en v1.0. Du nouveau pour la version 2.0 de GBFS \ud83d\udeb2\ud83d\udef4 : Le format de donn\u00e9es GBFS (General Bikeshare Feed Specification) est maintenant disponible en version 2.0, permettant de suivre l\u2019usage et la disponibilit\u00e9 de v\u00e9los et trottinettes en libre service.","title":"Fran\u00e7ais"},{"location":"resources/#portugues","text":"GBFS v2.3-RC est\u00e1 aqui para resolver (alguns) dos seus problemas : Mas embora amamos a v2.2, a GBFS estava pronta para algumas melhorias. Permita-nos apresentar a v2.3-RC!","title":"Portugu\u00eas"},{"location":"resources/#data","text":"","title":"Data"},{"location":"resources/#third-party-gbfs-url-directories","text":"Bike Share Research : BSR aims to facilitate the curation of bikeshare service data through collaborative and open data platforms while making it API accessible.","title":"Third Party GBFS URL Directories"},{"location":"resources/#archived-bikeshare-data","text":"Open Mobility Foundation Mobility Data Management State of Practice - Public Data Sharing : A list of public mobility data sets, and information about approaches to anonymization published by cities.","title":"Archived Bikeshare Data"},{"location":"resources/#proprietary-non-standard-vendor-apis","text":"CityBikes : REST API for aggregated bikeshare data from around the world. Powered by pyBikes . fluctuo Data Flow : Realtime vehicles location API. Exhaustive and reliable standardized data on free-floating mobility services available in real-time.","title":"Proprietary (non-standard) Vendor APIs"},{"location":"resources/#software-for-creating-apis","text":"mapintelligenceagency/gbfsQL : Wraps any number of GBFS feeds into an easily consumable GraphQL API. Merges relevant feeds and supports real-time updates for clients via Websockets/GraphQL Subscriptions. OneBusAway : A Java app that consumes GTFS and GTFS-Realtime (along with other formats ) and turns them into an easy to use REST API . OpenTripPlanner : An open source platform for multi-modal and multi-agency journey planning, as well as returning information about a multi-modal graph (using data sources such as GTFS and OpenStreetMap ). pyBikes : Software powering CityBikes for worldwide bikeshare system info.","title":"Software for Creating APIs"},{"location":"resources/#apps","text":"","title":"Apps"},{"location":"resources/#web-apps","text":"Bikeshare Map : Status of all worldwide bikeshare stations. CityMapper Webapp : Webapp with trip planner and route status for over 30 cities. OpenTripPlanner Client GWT : A Google Web Toolkit-based web interface for OpenTripPlanner. OpenTripPlanner.json : A Javascript-based client for OpenTripPlanner. 1-Click : A virtual \u201ctrip aggregator\u201d that assembles information on a wide variety of available modes: public transit, private, rail, rideshare, carpool, volunteer, paratransit, and walking and baking. Open-source on GitHub .","title":"Web Apps"},{"location":"resources/#native-apps-open-source","text":"findmybikes : an Android app for trip planning and automatic recording ( source code ). MonTransit : an Android app for trip planning and automatic recording ( source code ). OneBusAway Android ( source code ) Fire Phone ( source code ) Google Glass GDK ( source code ) iOS ( source code ) Windows Phone ( source code ) Windows 8 ( source code ) OpenTripPlanner Android iOS","title":"Native Apps (open source)"},{"location":"resources/#native-apps-closed-source","text":"CityMapper Moovit Tiramisu Transit Transit VeloDispo","title":"Native Apps (closed source)"},{"location":"resources/#visualizations","text":"GBFS/Open Data Viewer : Visualize micromobility and other open data. GBFS-Viewer : View micromobility data in your browser.","title":"Visualizations"},{"location":"resources/#gbfs","text":"GBFS Specification on GitHub NABSA's Open Data Resources","title":"GBFS"},{"location":"resources/#gbfs-libraries","text":"BikeshareClient : dotnet client for GBFS written in C#. Enables dotnet developers to create apps and services using data from GBFS Bikeshare systems.","title":"GBFS Libraries"},{"location":"resources/#gbfs-analysis-tools","text":"gbfs R package : Functions to interface with GBFS feeds in R, allowing users to save and accumulate tidy .rds datasets for specified cities/bikeshare programs.","title":"GBFS Analysis Tools"},{"location":"resources/#gbfs-schema","text":"gbfs-json-schema : MobilityData owned JSON schemas for all existing versions of GBFS (including up to v2.2 and v3.0RC).","title":"GBFS Schema"},{"location":"resources/#gbfs-validators","text":"gbfs-validator : 3rd party tool to validate GBFS feeds GBFS Validator : Go implementation of client, server and validator for GBFS","title":"GBFS Validators"},{"location":"resources/#other-multimodal-data-formats","text":"Alliance for Parking Data Standards (APDS) : Formed by the International Parking Institute , the British Parking Association , and the European Parking Association , APDS is a not-for-profit organization with the mission to develop, promote, manage, and maintain a uniform global standard that will allow organizations to share parking data across platforms worldwide. City Data Standard - Mobility : An open data standard for data exchange between cities and shared mobility operators. Data Standards and Guidance for Transportation Planning and Traffic Operations : Standards and/or guidance to be used and adopted by the transportation community collecting, managing, an sharing status and real-time data for transportation planning and operations. Dyno-Demand : A GTFS-based travel demand data format focusing on individual passenger demand suitable for dynamic network modelling developed by San Francisco County Transportation Authority , LMZ LLC, and Urban Labs LLC . Dyno-Path : ( Under development ) Data from individual passenger trajectories. General Transit Feed Specification : A GTFS feed is a group of text files that contains infrequently changing transit data, like stops, routes, trips, and other schedule data. Transit agencies typically update their GTFS feed every few months. General Travel Network Specification : A planned data specification for sharing travel demand model networks. Managed and Tolled Lanes Feed Specification (MTLFS) : Proposal for a schema that comprises of MTLFS and defined the field used in all of those files developed by Santa Clara Valley Transportation Authority . Mobility as a Service API : A set of open documents and test suite that defines a MaaS-compatible API. Mobility Data Specification : A project of the Open Mobility Foundation (OMF), MDS is a set of open source APIs focused on dockless shared mobility. Inspired by projects like GTFS and GBFS, the goals of MDS are to provide a standardized way for municipalities or other regulatory agencies to regulate operators and enforce policy, and ingest, compare and analyze data from mobility service providers, and to give municipalities the ability to express regulation in machine-readable formats. NeTex : A general purpose XML format designed for the exchange of complex static transport data among distributed systems managed by the CEN standards process . SAE Shared Mobility : Working on a data standard for carshare and transportation network companies/rideshare. Transactional Data Specifications for Transportation Planning and Traffic Operations : Technical specifications for transactional data for entities involved in the provision of demand-responsive transportation. Transit ITS Data Exchange Specification (TIDES) Project : A proposed effort to create standard data structures, APIs, and data management tools for historical transit ITS data including AVL, APC, and AFC Data.","title":"Other Multimodal Data Formats"}]}